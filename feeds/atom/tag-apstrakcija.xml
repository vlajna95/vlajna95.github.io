<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>DP Tech - apstrakcija</title><link href="http://dp-tech.tk/" rel="alternate"></link><link href="http://dp-tech.tk/feeds/atom/tag-apstrakcija.xml" rel="self"></link><id>http://dp-tech.tk/</id><updated>2022-01-10T19:31:00+01:00</updated><subtitle>Tvoj omiljeni blog</subtitle><entry><title>AJP 1.2. Apstraktne klase i interfejsi</title><link href="http://dp-tech.tk/articles/ajp-12-apstraktne-klase-i-interfejsi" rel="alternate"></link><published>2022-01-10T19:31:00+01:00</published><updated>2022-01-10T19:31:00+01:00</updated><author><name>Danijela Popović</name></author><id>tag:dp-tech.tk,2022-01-10:/articles/ajp-12-apstraktne-klase-i-interfejsi</id><summary type="html">&lt;p&gt;Apstraktne klase i interfejsi u programskom jeziku Java&lt;/p&gt;</summary><content type="html">
&lt;hr/&gt;
&lt;p&gt;Prethodna lekcija donela je kratak osvrt na osnovne postulate objektno orijentisanog programiranja u Javi. Prikazano je kako se obavlja kreiranje klasa i objekata, te kako se postiže nasleđivanje, redefinisanje i preklapanje metoda. Sve su to pojmovi čije je razumevanje neophodno za ono što će biti izneto u nastavku ovog modula. &lt;/p&gt;
&lt;p&gt;Sada je vreme da se posvetimo naprednim osobinama objektno orijentisanog programiranja u Javi. Za početak, pozabavićemo se specifičnim oblicima u kojima mogu postojati Java klase, pa će tako u ovoj lekciji biti reči o apstraktnim klasama. Nakon apstraktnih klasa, u ovoj lekciji biće predstavljen još jedan veoma značajan pojam objektno orijentisanog programiranja - interfejsi. &lt;/p&gt;
&lt;h2 id="apstraktne-klase"&gt;Apstraktne klase&lt;/h2&gt;
&lt;p&gt;Apstraktne klase omogućavaju da se kreira klasa koja se ne može instancirati. I sada se verovatno pitate – zbog čega bismo uopšte i kreirali klasu koja se ne može koristiti za kreiranje objekata? Naime, u nekim situacijama može se javiti potreba za kreiranjem klase koja bi se koristila samo kao obrazac za kreiranje nekih drugih klasa. Takva klasa bi služila kao osnova za sve klase koje bi iz nje bile izvedene. Tako su apstraktne klase one koje se ne mogu instancirati, već samo naslediti. &lt;br/&gt;
Primer iz prethodne lekcije idealan je za razumevanje pojma apstraktnih klasa. Naime, &lt;code&gt;Product&lt;/code&gt; klasa se može pretvoriti u apstraktnu klasu: &lt;/p&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;abstract&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;class&lt;/span&gt; &lt;span style="color: #fec418"&gt;Product&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;...&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Bitno je da primetite da smo prilikom definisanja klase &lt;code&gt;Product&lt;/code&gt; iskoristili ključnu reč &lt;code&gt;abstract&lt;/code&gt;. Ključna reč &lt;code&gt;abstract&lt;/code&gt; je ono što jednu klasu čini apstraktnom. Ovu ključnu reč je potrebno postaviti nakon ključne reči koja predstavlja modifikator pristupa, a pre ključne reči &lt;code&gt;class&lt;/code&gt; kojom se deklariše klasa. &lt;/p&gt;
&lt;p&gt;Nakon pretvaranja klase &lt;code&gt;Product&lt;/code&gt; u apstraktnu, nećete moći da primetite nikakvu razliku u funkcionisanju koda iz prethodne lekcije. Naime, instanciranje objekata nasleđenih klasa funkcionisaće bez ikakvih problema. &lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Program.java&lt;/summary&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;span class="filename"&gt;// Program.java&lt;/span&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;class&lt;/span&gt; &lt;span style="color: #fec418"&gt;Program&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;static&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;main&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(String&lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;[]&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; args) {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		Gamepad product1 &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;new&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; Gamepad(&lt;/span&gt;&lt;span style="color: #48b685"&gt;"Logitech"&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;, &lt;/span&gt;&lt;span style="color: #48b685"&gt;"F710"&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;, &lt;/span&gt;&lt;span style="color: #f99b15"&gt;129.99&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;, &lt;/span&gt;&lt;span style="color: #815ba4"&gt;true&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;);&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		Printer product2 &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;new&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; Printer(&lt;/span&gt;&lt;span style="color: #48b685"&gt;"HP"&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;, &lt;/span&gt;&lt;span style="color: #48b685"&gt;"Envy Photo 7155"&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;, &lt;/span&gt;&lt;span style="color: #f99b15"&gt;179.99&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;, &lt;/span&gt;&lt;span style="color: #815ba4"&gt;true&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;);&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		Monitor product3 &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;new&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; Monitor(&lt;/span&gt;&lt;span style="color: #48b685"&gt;"Dell"&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;, &lt;/span&gt;&lt;span style="color: #48b685"&gt;"U2419H"&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;, &lt;/span&gt;&lt;span style="color: #f99b15"&gt;219.99&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;, &lt;/span&gt;&lt;span style="color: #f99b15"&gt;24&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;);&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		System.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;out&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;println&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(product1);&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		System.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;out&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;println&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(product2);&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		System.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;out&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;println&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(product3);&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Product.java&lt;/summary&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;span class="filename"&gt;// Product.java&lt;/span&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;abstract&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;class&lt;/span&gt; &lt;span style="color: #fec418"&gt;Product&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;private&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; String brand;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;private&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; String model;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;private&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;double&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; price;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #848484"&gt;// ...&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;Product&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(String brand, String model, &lt;/span&gt;&lt;span style="color: #fec418"&gt;double&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; price) {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;brand&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; brand;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;model&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; model;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;price&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; price;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;@Override&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; String &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;toString&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;return&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #48b685"&gt;"Brand='"&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; brand &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; '\'' &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #48b685"&gt;", Model='"&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; model &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; '\'' &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #48b685"&gt;", Price="&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; price;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Gamepad.java&lt;/summary&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;span class="filename"&gt;// Gamepad.java&lt;/span&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;class&lt;/span&gt; &lt;span style="color: #fec418"&gt;Gamepad&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;extends&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; Product {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #fec418"&gt;boolean&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; wireless;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;Gamepad&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(String brand, String model, &lt;/span&gt;&lt;span style="color: #fec418"&gt;double&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; price, &lt;/span&gt;&lt;span style="color: #fec418"&gt;boolean&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; wireless) {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;super&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(brand, model, price);&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;wireless&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; wireless;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;@Override&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; String &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;toString&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;return&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;super&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;toString&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #48b685"&gt;", "&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #48b685"&gt;"wireless="&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; wireless;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Monitor.java&lt;/summary&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;span class="filename"&gt;// Monitor.java&lt;/span&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;class&lt;/span&gt; &lt;span style="color: #fec418"&gt;Monitor&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;extends&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; Product {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #fec418"&gt;double&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; diagonal;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;Monitor&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(String brand, String model, &lt;/span&gt;&lt;span style="color: #fec418"&gt;double&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; price, &lt;/span&gt;&lt;span style="color: #fec418"&gt;double&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; diagonal) {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;super&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(brand, model, price);&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;diagonal&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; diagonal;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;@Override&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; String &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;toString&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;return&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;super&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;toString&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #48b685"&gt;", "&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #48b685"&gt;"diagonal="&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; diagonal;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Printer.java&lt;/summary&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;span class="filename"&gt;// Printer.java&lt;/span&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;class&lt;/span&gt; &lt;span style="color: #fec418"&gt;Printer&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;extends&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; Product {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #fec418"&gt;boolean&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; color;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;Printer&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(String brand, String model, &lt;/span&gt;&lt;span style="color: #fec418"&gt;double&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; price, &lt;/span&gt;&lt;span style="color: #fec418"&gt;boolean&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; color) {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;super&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(brand, model, price);&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;color&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; color;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;@Override&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; String &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;toString&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;return&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;super&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;toString&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #48b685"&gt;", "&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #48b685"&gt;"color="&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; color;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;Ipak, ukoliko pokušate da instancirate klasu &lt;code&gt;Product&lt;/code&gt;, koja je sada apstraktna, doći će do pojave greške (slika 2.1). &lt;/p&gt;
&lt;figure&gt;
&lt;img alt="Slika 2.1. Pokušaj instanciranja apstraktne klase proizvodi grešku" src="/images/AdvancedJavaProgramming/1_02_01.png"/&gt;
&lt;figcaption&gt;Slika 2.1. Pokušaj instanciranja apstraktne klase proizvodi grešku&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Na slici 2.1. se jasno može videti da razvojno okruženje ukazuje na grešku prilikom pokušaja instanciranja klase &lt;code&gt;Product&lt;/code&gt; koja je apstraktna. &lt;/p&gt;
&lt;p&gt;Apstraktne i konkretne klase &lt;br/&gt;
U prethodnim redovima ste mogli da pročitate da su apstraktne one klase koje se ne mogu instancirati. Sa druge strane, sve one klase koje se mogu instancirati nazivaju se konkretne. Tako se može reći da jedna klasa u Java jeziku može biti apstraktna ili konkretna. &lt;/p&gt;
&lt;h2 id="apstraktne-metode"&gt;Apstraktne metode&lt;/h2&gt;
&lt;p&gt;Još jedna osobenost apstraktnih klasa jeste njihova mogućnost da sadrže apstraktne metode. Reč je o metodama koje ne poseduju implementaciju, odnosno logiku, već samo potpis: &lt;/p&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;abstract&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;class&lt;/span&gt; &lt;span style="color: #fec418"&gt;Product&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	...&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;abstract&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;int&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;checkStock&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;();&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Unutar klase &lt;code&gt;Product&lt;/code&gt; sada je postavljena i jedna apstraktna metoda sa nazivom &lt;code&gt;checkStock()&lt;/code&gt;. Da je reč o apstraktnoj metodi znamo na osnovu upotrebe ključne reči &lt;code&gt;abstract&lt;/code&gt; prilikom njenog deklarisanja. Opet važi identično pravilo kao i prilikom kreiranja apstraktnih klasa: ključna reč &lt;code&gt;abstract&lt;/code&gt; navodi se odmah nakon modifikatora pristupa, ali pre tipa povratne vrednosti. &lt;/p&gt;
&lt;p&gt;Apstraktne metode ne smeju imati telo, stoga je definisanje apstraktne metode sa telom sintaksna greška (slika 2.2). &lt;/p&gt;
&lt;figure&gt;
&lt;img alt="Slika 2.2. Apstraktne metode ne mogu imati telo" src="/images/AdvancedJavaProgramming/1_02_02.png"/&gt;
&lt;figcaption&gt;Slika 2.2. Apstraktne metode ne mogu imati telo&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;S obzirom na to da ne mogu imati telo i da se mogu pojaviti samo unutar klasa koje se ne mogu instancirati (čitaj: apstraktnih klasa), kao logično se nameće pitanje svrhe apstraktnih metoda. Apstraktne metode imaju jednu vrlo važnu ulogu u objektno orijentisanom programiranju. One se zapravo koriste da obavežu sve klase koje nasleđuju neku klasu da moraju obezbediti implementaciju svih metode koje su u roditeljskoj klasi označene kao apstraktne. Neispunjenje takve obaveze stvara grešku, pa stoga u ovom trenutku imamo tri greške u našem projektu (slika 2.3). &lt;/p&gt;
&lt;figure&gt;
&lt;img alt="Slika 2.3. Obaveza klase da implementira apstraktne metode" src="/images/AdvancedJavaProgramming/1_02_03.png"/&gt;
&lt;figcaption&gt;Slika 2.3. Obaveza klase da implementira apstraktne metode&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Slika 2.3. ilustruje poruku iz jedne od klasa koje nasleđuju klasu &lt;code&gt;Product&lt;/code&gt; unutar našeg Java programa. I u ostalim klasama postoji identična greška - apstraktna metoda &lt;code&gt;checkStock()&lt;/code&gt; iz roditeljske klase se mora implementirati u nasleđenoj klasi: &lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Program.java&lt;/summary&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;span class="filename"&gt;// Program.java&lt;/span&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;class&lt;/span&gt; &lt;span style="color: #fec418"&gt;Program&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;static&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;main&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(String&lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;[]&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; args) {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		Monitor product3 &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;new&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; Monitor(&lt;/span&gt;&lt;span style="color: #48b685"&gt;"Dell"&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;, &lt;/span&gt;&lt;span style="color: #48b685"&gt;"U2419H"&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;, &lt;/span&gt;&lt;span style="color: #f99b15"&gt;219.99&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;, &lt;/span&gt;&lt;span style="color: #f99b15"&gt;24&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;);&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		System.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;out&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;println&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(product3.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;checkStock&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;());&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Product.java&lt;/summary&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;span class="filename"&gt;// Monitor.java&lt;/span&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;class&lt;/span&gt; &lt;span style="color: #fec418"&gt;Monitor&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;extends&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; Product {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #fec418"&gt;double&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; diagonal;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;Monitor&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(String brand, String model, &lt;/span&gt;&lt;span style="color: #fec418"&gt;double&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; price, &lt;/span&gt;&lt;span style="color: #fec418"&gt;double&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; diagonal) {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;super&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(brand, model, price);&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;diagonal&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; diagonal;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;@Override&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; String &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;toString&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;return&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;super&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;toString&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #48b685"&gt;", "&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #48b685"&gt;"diagonal="&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; diagonal;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;@Override&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;int&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;checkStock&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;return&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; (&lt;/span&gt;&lt;span style="color: #fec418"&gt;int&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;) (Math.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;random&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;*&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #f99b15"&gt;100&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;);&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;Na dnu klase &lt;code&gt;Monitor&lt;/code&gt; sada možete da vidite metodu &lt;code&gt;checkStock()&lt;/code&gt;, koja poseduje implementaciju, odnosno telo sa logikom koja utvrđuje stanje rezervi određenog proizvoda. Logika za utvrđivanje stanja zaliha služi samo radi ilustracije, pa metoda &lt;code&gt;checkStock()&lt;/code&gt; kao svoju povratnu vrednost može da emituje broj u rasponu od 0 do 99. U realnim okolnostima, unutar metode &lt;code&gt;checkStock()&lt;/code&gt; verovatno bi se nalazila logika koja bi podatke o stanju zaliha čitala iz nekog lokalnog ili udaljenog skladišta podataka. &lt;br/&gt;
Metoda &lt;code&gt;checkStock()&lt;/code&gt; obeležena je oznakom &lt;code&gt;@Override&lt;/code&gt;, kako bi se naznačilo da istoimena metoda postoji i unutar roditeljske klase. I zaista, implementacija apstraktnih metoda je jedan od klasičnih primera redefinisanja metoda, odnosno polimorfizma. &lt;/p&gt;
&lt;h4 id="intellij-idea-tip-implementiranje-apstraktnih-metoda"&gt;IntelliJ IDEA Tip: Implementiranje apstraktnih metoda&lt;/h4&gt;
&lt;p&gt;Apstraktne metode iz roditeljskih klasa veoma lako se mogu implementirati korišćenjem razvojnog okruženja IntelliJ IDEA. Dovoljno je odabrati opciju &lt;strong&gt;Implement methods_&lt;/strong&gt; koja postoji unutar panela koji se dobija kada se kursor miša postavi iznad podvučenog dela koda u situaciji kada postoje apstraktne metode koje nisu implementirane (slika 2.4). &lt;/p&gt;
&lt;figure&gt;
&lt;img alt="Slika 2.4. Implementiranje apstraktnih metoda korišćenjem IntelliJ IDEA okruženja" src="/images/AdvancedJavaProgramming/1_02_04.png"/&gt;
&lt;figcaption&gt;Slika 2.4. Implementiranje apstraktnih metoda korišćenjem IntelliJ IDEA okruženja&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Klikom na opciju &lt;strong&gt;Implement methods&lt;/strong&gt; otvara se prozor za odabir metoda koje će biti implementirane (slika 2.5). &lt;/p&gt;
&lt;figure&gt;
&lt;img alt="Slika 2.5. Prozor za odabir metoda koje će biti implementirane" src="/images/AdvancedJavaProgramming/1_02_05.png"/&gt;
&lt;figcaption&gt;Slika 2.5. Prozor za odabir metoda koje će biti implementirane&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;U našem primeru postoji samo jedna metoda za implementiranje (&lt;code&gt;checkStock&lt;/code&gt;), a pored odabira metoda za implementaciju, prozor sa slike 2.5. omogućava da odlučimo da li želimo da se JavaDoc komentari prekopiraju iz roditeljske klase i da li želimo da metoda bude obeležena &lt;code&gt;@Override&lt;/code&gt; anotacijom, kako bi se lakše moglo uočiti da je reč o metodi koja je redefinisana. &lt;br/&gt;
Klikom na dugme OK dobija se implementacija metode &lt;code&gt;checkStock()&lt;/code&gt;, sa podrazumevanom logikom: &lt;/p&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;@Override&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;int&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;checkStock&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;return&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #f99b15"&gt;0&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Jedini scenario u kome implementiranje apstraktnih metoda nije neophodno jeste onda kada i sama klasa koja nasleđuje nije konkretna. To praktično znači da se apstraktna metoda &lt;code&gt;checkStock()&lt;/code&gt; ne bi morala implementirati onda kada bi i klasa &lt;code&gt;Monitor&lt;/code&gt; bila apstraktna. Ipak, apstraktne metode iz svih roditeljskih klasa moraju se implementirati u prvoj konkretnoj klasi u lancu nasleđivanja. &lt;/p&gt;
&lt;p&gt;Apstraktne klase mogu posedovati i klasične metode &lt;br/&gt;
Osobenost apstraktnih klasa jeste mogućnost postojanja apstraktnih metoda. Ipak, ništa ne sprečava apstraktne klase da pored apstraktnih metoda poseduju i klasične metode, odnosno metode koje imaju telo. Takođe, apstraktne klase mogu posedovati i sve ostale elemente koji se mogu naći unutar Java klasa - svojstva, konstruktore... &lt;/p&gt;
&lt;h2 id="interfejsi"&gt;Interfejsi&lt;/h2&gt;
&lt;p&gt;Esencijalni sastojak gotovo svakog objektno orijentisanog programskog jezika jesu i interfejsi. Odmah je potrebno razumeti da se pod pojmom interfejsa u objektno orijentisanom programiranju ne podrazumeva bilo kakvo korisničko okruženje (User Interface – UI), odnosno grafički interfejs, što je uglavnom prva pomisao koju početnici dobijaju prilikom spominjanja pojma interfejsa. Ovde je reč o pojmu sa potpuno drugačijim značenjem, odnosno o konceptu koji omogućava najviši stepen apstrakcije u objektno orijentisanim jezicima. &lt;/p&gt;
&lt;p&gt;Pre nego što se posvetimo praktičnom kreiranju interfejsa, neophodno je da razumemo odakle potiče takav naziv – interfejs. Naime, do sada ste već imali prilike da vidite da se objekti klasa ponašaju kao zaokružene celine, unutar kojih su procesom enkapsulacije objedinjena svojstva i ponašanja koja su karakteristična za tip konkretnog objekta. Sa spoljašnjim svetom, odnosno sa ostatkom programa, objekti komuniciraju primarno posredstvom metoda. Drugim rečima, nakon instanciranja neke klase i dobijanja objekta, imamo mogućnost da njima rukujemo pozivanjem njegovih metoda i obradom izlaznih podataka. Tako se može reći da su metode koje izlaže jedan objekat interfejs za vršenje interakcije sa takvim objektom. Analogija se može napraviti sa automobilom. Volan, ručica menjača, kontrole pored volana i kontakt-brava objedinjeno se mogu nazvati interfejsom koji nam je proizvođač automobila izložio kako bismo njime mogli da upravljamo. Mi ne moramo da znamo na koji način su sve nabrojane operacije realizovane ispod haube, već samo kako da koristimo interfejs koji nam je stavljen na raspolaganje. Po identičnom principu, i metode koje jedan objekat izlaže na korišćenje spoljnom svetu mogu se nazvati interfejsom za rukovanje takvim objektom. Java programski jezik omogućava da se takav interfejs artikuliše posebnim jezičkim elementom koji se kreira korišćenjem ključne reči &lt;code&gt;interface&lt;/code&gt;. &lt;/p&gt;
&lt;p&gt;U svom osnovnom obliku, interfejsi u Javi mogu da poseduju proizvoljan broj apstraktnih metoda: &lt;/p&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;interface&lt;/span&gt; &lt;span style="color: #fec418"&gt;Storable&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;abstract&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;read&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;();&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;abstract&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;write&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;();&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;abstract&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;update&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;();&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;abstract&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;delete&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;();&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Kao što možete da vidite, interfejsi se kreiraju slično klasama. Razlika je upotreba ključne reči &lt;code&gt;interface&lt;/code&gt; umesto ključne reči &lt;code&gt;class&lt;/code&gt;. Prikazanim kodom kreiran je jedan interfejs sa nazivom &lt;code&gt;Storable&lt;/code&gt; i unutar njega se nalaze četiri apstraktne metode: &lt;code&gt;read()&lt;/code&gt;, &lt;code&gt;write()&lt;/code&gt;, &lt;code&gt;update()&lt;/code&gt; i &lt;code&gt;delete()&lt;/code&gt;. &lt;/p&gt;
&lt;h4 id="intellij-idea-tip-kreiranje-interfejsa"&gt;IntelliJ IDEA Tip: Kreiranje interfejsa&lt;/h4&gt;
&lt;p&gt;Interfejsi se korišćenjem IntelliJ IDEA razvojnog okruženja kreiraju slično klasama. Potrebno je odabrati opciju &lt;strong&gt;New-&amp;gt;Java Class&lt;/strong&gt;, koja se nalazi u kontekstnom meniju koji se dobija desnim klikom na folder &lt;code&gt;src&lt;/code&gt; (slika 2.6). &lt;/p&gt;
&lt;figure&gt;
&lt;img alt="Slika 2.6. Opcija za kreiranje nove klase (interfejsa)" src="/images/AdvancedJavaProgramming/1_02_06.png"/&gt;
&lt;figcaption&gt;Slika 2.6. Opcija za kreiranje nove klase (interfejsa)&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;U prozoru koji se zatim dobija, potrebno je uneti naziv interfejsa i odabrati opciju &lt;strong&gt;Interface&lt;/strong&gt; (slika 2.7). &lt;/p&gt;
&lt;figure&gt;
&lt;img alt="Slika 2.7. Prozor za unos naziva novog interfejsa" src="/images/AdvancedJavaProgramming/1_02_07.png"/&gt;
&lt;figcaption&gt;Slika 2.7. Prozor za unos naziva novog interfejsa&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Nakon potvrđivanja pritiskom na taster Enter ili duplim klikom na opciju &lt;strong&gt;Interface&lt;/strong&gt;, IntelliJ IDEA kreira interfejs sa definisanim imenom, čije je telo prazno: &lt;/p&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;interface&lt;/span&gt; &lt;span style="color: #fec418"&gt;Storable&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;U upravo kreiranom interfejsu sa nazivom &lt;code&gt;Storable&lt;/code&gt;, definisane su četiri apstraktne metode. S obzirom na to da je reč o apstraktnim metodama, one ne poseduju telo, već samo potpis. Osnovni razlog za kreiranje interfejsa jeste njihova implementacija od strane klasa. Na primer, ovako može da izgleda implementacija &lt;code&gt;Storable&lt;/code&gt; interfejsa od strane klase &lt;code&gt;Gamepad&lt;/code&gt;: &lt;/p&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;class&lt;/span&gt; &lt;span style="color: #fec418"&gt;Gamepad&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;extends&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; Product &lt;/span&gt;&lt;span style="color: #815ba4"&gt;implements&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; Storable {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	...&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Interfejs se implementira korišćenjem ključne reči &lt;code&gt;implements&lt;/code&gt;, nakon koje se navodi naziv interfejsa. Kada jedna klasa implementira neki interfejs, ona se obavezuje da će implemetirati sve metode koje se nalaze unutar interfejsa. To praktično znači da se unutar klase &lt;code&gt;Gamepad&lt;/code&gt; moraju implemetirati sve metode koje postoje unutar interfejsa &lt;code&gt;Storable&lt;/code&gt; (slika 2.8). &lt;/p&gt;
&lt;figure&gt;
&lt;img alt="Slika 2.8. Prilikom implementiranja interfejsa moraju se implementirati sve njegove apstraktne metode" src="/images/AdvancedJavaProgramming/1_02_08.png"/&gt;
&lt;figcaption&gt;Slika 2.8. Prilikom implementiranja interfejsa moraju se implementirati sve njegove apstraktne metode&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Kako bi klasa &lt;code&gt;Gamepad&lt;/code&gt; ispunila obećanje dato implementiranjem interfejsa, neophodno je da unutar nje budu implementirane sve metode iz interfejsa: &lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Program.java&lt;/summary&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;span class="filename"&gt;// Program.java&lt;/span&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;class&lt;/span&gt; &lt;span style="color: #fec418"&gt;Program&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;static&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;main&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(String&lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;[]&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; args) {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		Gamepad product1 &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;new&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; Gamepad(&lt;/span&gt;&lt;span style="color: #48b685"&gt;"Logitech"&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;, &lt;/span&gt;&lt;span style="color: #48b685"&gt;"F710"&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;, &lt;/span&gt;&lt;span style="color: #f99b15"&gt;129.99&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;, &lt;/span&gt;&lt;span style="color: #815ba4"&gt;true&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;);&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		product1.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;delete&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;();&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Product.java&lt;/summary&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;span class="filename"&gt;// Product.java&lt;/span&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;abstract&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;class&lt;/span&gt; &lt;span style="color: #fec418"&gt;Product&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;private&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; String brand;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;private&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; String model;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;private&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;double&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; price;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #848484"&gt;//...&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;Product&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(String brand, String model, &lt;/span&gt;&lt;span style="color: #fec418"&gt;double&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; price) {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;brand&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; brand;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;model&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; model;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;price&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; price;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;@Override&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; String &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;toString&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;return&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #48b685"&gt;"Brand='"&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; brand &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; '\'' &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #48b685"&gt;", Model='"&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; model &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; '\'' &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #48b685"&gt;", Price="&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; price;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Gamepad.java&lt;/summary&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;span class="filename"&gt;// Gamepad.java&lt;/span&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;class&lt;/span&gt; &lt;span style="color: #fec418"&gt;Gamepad&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;extends&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; Product &lt;/span&gt;&lt;span style="color: #815ba4"&gt;implements&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; Storable {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #fec418"&gt;boolean&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; wireless;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;Gamepad&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(String brand, String model, &lt;/span&gt;&lt;span style="color: #fec418"&gt;double&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; price, &lt;/span&gt;&lt;span style="color: #fec418"&gt;boolean&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; wireless) {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;super&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(brand, model, price);&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;wireless&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; wireless;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;@Override&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; String &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;toString&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;return&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;super&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;toString&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #48b685"&gt;", "&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #48b685"&gt;"wireless="&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; wireless;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;@Override&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;read&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #848484"&gt;// logic for reading&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;@Override&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;write&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #848484"&gt;// logic for writing&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;@Override&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;update&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #848484"&gt;// logic for updating&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;@Override&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;delete&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #848484"&gt;// logic for deleting&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Storable.java&lt;/summary&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;span class="filename"&gt;// Storable.java&lt;/span&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;interface&lt;/span&gt; &lt;span style="color: #fec418"&gt;Storable&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;abstract&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;read&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;();&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;abstract&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;write&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;();&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;abstract&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;update&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;();&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;abstract&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;delete&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;();&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;Možemo da zaključimo da se korišćenjem interfejsa &lt;code&gt;Storable&lt;/code&gt; klasa &lt;code&gt;Gamepad&lt;/code&gt; obavezala da će unutar sebe imati četiri metode koje su definisane unutar takvog interfejsa. &lt;/p&gt;
&lt;p&gt;Interfejs &lt;code&gt;Storable&lt;/code&gt; &lt;br/&gt;
Prilikom demonstracije upotrebe interfejsa, u ovoj lekciji smo se odlučili za jedan realan primer interfejsa. Naime, upravo kreirani interfejs &lt;code&gt;Storable&lt;/code&gt; može se koristiti da naznači da neka klasa poseduje metode za obavljanje osnovnih operacija nad skladištem podataka. &lt;br/&gt;
U realnim aplikacijama, podaci se čuvaju unutar različitih vrsta skladišta podataka. Na primer, podaci se mogu čuvati unutar običnih tekstualnih fajlova, ali i unutar specijalizovanih skladišta koja se nazivaju baze podataka. Podaci iz takvih skladišta se unutar Java programa predstavljaju kao objekti odgovarajućih klasa. U primeru iz ove lekcije, to bi značilo da se podaci o proizvodima nalaze u nekoj bazi podataka. Java program takvim podacima rukuje u objektnom obliku, pri čemu se metode &lt;code&gt;read()&lt;/code&gt;, &lt;code&gt;write()&lt;/code&gt;, &lt;code&gt;update()&lt;/code&gt; i &lt;code&gt;delete()&lt;/code&gt; koriste za obavljanje četiri osnovne operacije nad podacima - čitanje, pisanje, ažuriranje i brisanje, respektivno. Implementacija interfejsa &lt;code&gt;Storable&lt;/code&gt; u primeru naše aplikacije jeste garancija da objekti neke klase poseduju četiri upravo spomenute metode za obavljanje osnovnih operacija nad skladištem podataka. &lt;/p&gt;
&lt;p&gt;Metode koje se definišu unutar interfejsa su podrazumevano javne apstraktne metode. Upravo zbog toga je ključne reči &lt;code&gt;public&lt;/code&gt; i &lt;code&gt;abstract&lt;/code&gt; moguće izostaviti i napisati sledeće: &lt;/p&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;interface&lt;/span&gt; &lt;span style="color: #fec418"&gt;Storable&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;read&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;();&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;write&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;();&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;update&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;();&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;delete&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;();&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="razlika-izmeu-interfejsa-i-apstraktnih-klasa"&gt;Razlika između interfejsa i apstraktnih klasa&lt;/h3&gt;
&lt;p&gt;U ovom trenutku se možete pitati zbog čega su nam potrebni interfejsi, kada smo identično mogli da postignemo i korišćenjem apstraktne klase i apstraktnih metoda unutar nje. Jednostavno smo mogli da apstraktne metode iz interfejsa definišemo unutar roditeljske &lt;code&gt;Product&lt;/code&gt; klase i efekat bi bio identičan, odnosno i tada bismo klasu &lt;code&gt;Gamepad&lt;/code&gt; obavezali da mora imati implementacije sve četiri metode iz interfejsa. Ipak, postoji nekoliko značajnih razlika između apstraktnih klasa i interfejsa. &lt;/p&gt;
&lt;p&gt;Apstraktne klase se nasleđuju, dok se interfejsi implementiraju &lt;br/&gt;
Prva razlika je kozmetičke mprirode. Apstraktne klase se nasleđuju, dok se interfejsi implementiraju, a takve operacije su propraćene i upotrebom odgovarajućih ključnih reči - &lt;code&gt;extends&lt;/code&gt; i &lt;code&gt;implements&lt;/code&gt;, respektivno. &lt;/p&gt;
&lt;p&gt;Jedna klasa može da nasledi samo jednu apstraktnu klasu, ali zato može da implemetira proizvoljan broj interfejsa &lt;br/&gt;
Prva značajna razlika između apstraktnih klasa i interfejsa odnosi se na mogućnost višestruke implementacije. Naime, jedna klasa može da implementira veći broj interfejsa, što nije slučaj prilikom nasleđivanja klasa. Stoga mi sada možemo napraviti još jedan interfejs, a onda njega implementirati od strane klase &lt;code&gt;Gamepad&lt;/code&gt;. Evo kako izgleda novi interfejs: &lt;/p&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;interface&lt;/span&gt; &lt;span style="color: #fec418"&gt;Searchable&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;search&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;();&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Klasa &lt;code&gt;Gamepad&lt;/code&gt;, pored već implementiranog interfejsa, sada može da implementira i &lt;code&gt;interfejs&lt;/code&gt;Searchable`: &lt;/p&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;class&lt;/span&gt; &lt;span style="color: #fec418"&gt;Gamepad&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;extends&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; Product &lt;/span&gt;&lt;span style="color: #815ba4"&gt;implements&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; Storable, Searchable {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	...&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Klasa &lt;code&gt;Gamepad&lt;/code&gt; sada implementira dva interfejsa. Jednostavno, nakon ključne reči &lt;code&gt;implements&lt;/code&gt; moguće je navesti veći broj interfejsa, koji se razdvajaju karakterom zapeta. &lt;/p&gt;
&lt;p&gt;Sada u okviru radnog okruženja možete dodati novi fajl &lt;code&gt;Searchable.java u kome bi se nalazio istoimeni interfejs, i onda klasa&lt;/code&gt;Gamepad&lt;code&gt;može da njegovom implementacijom nasledi&lt;/code&gt;search()` metodu. &lt;/p&gt;
&lt;p&gt;Jedan interfejs može biti implementiran od strane proizvoljnog broja klasa, pa čak i kada one međusobno nemaju nikakvih dodirnih tačaka &lt;br/&gt;
Svakako najznačajnija osobenost interfejsa, i ujedno ono što ih razlikuje od apstraktnih klasa, jeste mogućnost implementacije interfejsa od strane klasa koje nemaju nikakvih dodirnih tačaka. Naime, interfejsi nisu vezani za neki konkretan tip ili grupu tipova. Jedan interfejs se može implementirati od strane klasa koje nemaju nikakvih dodirnih tačaka, što je u potpunosti suprotno od onoga što važi za apstraktne klase. Naime, sve klase koje nasleđuju jednu klasu moraju biti srodne, s obzirom na to da dele osobine koje su definisane unutar roditeljske klase. Za razliku od apstraktnih klasa, jedan interfejs mogu implementirati klase potpuno različitih namena. &lt;br/&gt;
Sve ovo u našem konkretnom primeru znači da interfejse &lt;code&gt;Storable&lt;/code&gt; i &lt;code&gt;Searchable&lt;/code&gt; mogu da implementiraju sve klase koje treba da imaju metode za čuvanje i pretragu: &lt;/p&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;class&lt;/span&gt; &lt;span style="color: #fec418"&gt;Customer&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;implements&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; Storable {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;private&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; String name;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;private&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; String address;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;private&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; String gender;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;Customer&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;Customer&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(String name, String address, String gender) {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;name&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; name;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;address&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; address;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;gender&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; gender;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;@Override&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;read&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #848484"&gt;// read logic&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;@Override&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;write&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #848484"&gt;// write logic&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;@Override&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;update&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #848484"&gt;// update logic&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;@Override&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;delete&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #848484"&gt;// delete logic&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ovo je primer još jedne klase koja može postojati u našem programu. Naime, velike su šanse da program koji rukuje proizvodima ima potrebu i za predstavljanjem kupaca, odnosno klijenata. Upravo to može biti namena prikazane klase &lt;code&gt;Customer&lt;/code&gt;. &lt;code&gt;Customer&lt;/code&gt; je klasa koja ne deli osobine ni sa jednom od klasa kojima se predstavljaju proizvodi. Ipak, to ne sprečava nijednu od takvih klasa da implementira interfejs &lt;code&gt;Storable&lt;/code&gt;. Zbog toga i klasa &lt;code&gt;Customer&lt;/code&gt; implementira interfejs &lt;code&gt;Storable&lt;/code&gt; i sve metode koje se unutar njega nalaze. To je garancija da objekti ove klase poseduju metode za obavljanje osnovnih operacija nad podacima kupaca. &lt;/p&gt;
&lt;p&gt;Sada u okviru radnog okruženja možete dodati novi fajl &lt;code&gt;Customer.java&lt;/code&gt; u kome bi se nalazila istoimena klasa. &lt;/p&gt;
&lt;p&gt;Interfejsi su referentni tipovi &lt;br/&gt;
Kreiranjem novog interfejsa zapravo se dobija jedan novi referentni tip u programu koji kreiramo. To praktično znači da su &lt;code&gt;Storable&lt;/code&gt; i &lt;code&gt;Searchable&lt;/code&gt; tipovi podataka. Veoma se lako možemo uveriti da je to stvarno tako: &lt;/p&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #c7c7c7"&gt;Storable product1 &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;new&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; Gamepad(&lt;/span&gt;&lt;span style="color: #48b685"&gt;"Logitech"&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;, &lt;/span&gt;&lt;span style="color: #48b685"&gt;"F710"&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;, &lt;/span&gt;&lt;span style="color: #f99b15"&gt;129.99&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;, &lt;/span&gt;&lt;span style="color: #815ba4"&gt;true&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Naredba ilustruje kod za kreiranje jednog objekta klase &lt;code&gt;Gamepad&lt;/code&gt;. Ipak, bitno je da primetite da je referenca na takav objekat smeštena unutar promenljive tipa &lt;code&gt;Storable&lt;/code&gt;. To je dokaz da je kreiranjem interfejsa &lt;code&gt;Storable&lt;/code&gt; stvoren i jedan novi tip u našem Java programu. To takođe znači i da se objekti klase &lt;code&gt;Gamepad&lt;/code&gt; sada mogu predstaviti korišćenjem nekoliko tipova: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;korišćenjem tipa &lt;code&gt;Gamepad&lt;/code&gt;, što je osnovni tip matične klase &lt;/li&gt;
&lt;li&gt;korišćenjem tipa &lt;code&gt;Product&lt;/code&gt;, zato što klasa &lt;code&gt;Gamepad&lt;/code&gt; nasleđuje takvu klasu &lt;/li&gt;
&lt;li&gt;korišćenjem tipa &lt;code&gt;Storable&lt;/code&gt;, što je interfejs koji ova klasa implementira &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #c7c7c7"&gt;Gamepad product1 &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;new&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; Gamepad(&lt;/span&gt;&lt;span style="color: #48b685"&gt;"Logitech"&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;, &lt;/span&gt;&lt;span style="color: #48b685"&gt;"F710"&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;, &lt;/span&gt;&lt;span style="color: #f99b15"&gt;129.99&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;, &lt;/span&gt;&lt;span style="color: #815ba4"&gt;true&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;);&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;Product product1 &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;new&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; Gamepad(&lt;/span&gt;&lt;span style="color: #48b685"&gt;"Logitech"&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;, &lt;/span&gt;&lt;span style="color: #48b685"&gt;"F710"&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;, &lt;/span&gt;&lt;span style="color: #f99b15"&gt;129.99&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;, &lt;/span&gt;&lt;span style="color: #815ba4"&gt;true&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;);&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;Storable product1 &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;new&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; Gamepad(&lt;/span&gt;&lt;span style="color: #48b685"&gt;"Logitech"&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;, &lt;/span&gt;&lt;span style="color: #48b685"&gt;"F710"&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;, &lt;/span&gt;&lt;span style="color: #f99b15"&gt;129.99&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;, &lt;/span&gt;&lt;span style="color: #815ba4"&gt;true&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Činjenica da su interfejsi tipovi veoma je korisna u situacijama kada je potrebno rukovati objektima čije konkretne tipove ne možemo znati unapred. Na primer, zamislite metodu koja može da prihvati neki objekat koji se može sačuvati u bazi i nad takvim objektom obavlja određene provere i na kraju pokreće operaciju čuvanja: &lt;/p&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;saveObject&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(Storable object) {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #848484"&gt;// do validation, and if valid call write&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	object.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;write&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;();&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Metoda &lt;code&gt;saveObject()&lt;/code&gt; je klasičan primer metode koja zavisi od apstrakcije, a ne od konkretne implementacije. Šta to praktično znači? &lt;br/&gt;
Ulazni parametar metode jeste tipa &lt;code&gt;Storable&lt;/code&gt;. To je tip koji predstavlja interfejs, a interfejs ne predstavlja neki konkretan tip podatka, zato što može biti implementiran od strane bilo koje klase. Stoga smo na ovaj način omogućili metodi &lt;code&gt;saveObject()&lt;/code&gt; da prihvati objekte koji mogu da budu različitih konkretnih tipova. Njoj možemo da prosledimo objekte tipa &lt;code&gt;Gamepad&lt;/code&gt; ili objekte tipa &lt;code&gt;Customer&lt;/code&gt;, odnosno objekte svih onih konkretnih tipova koji implementiraju interfejs &lt;code&gt;Storable&lt;/code&gt;. Štaviše, metoda &lt;code&gt;saveObject()&lt;/code&gt; uopšte ne mora ni znati koji će konkretan tip da dobije. Sve što ona zna jeste da će dobiti tip koji je implemetirao interfejs &lt;code&gt;Storable&lt;/code&gt;, a to je garancija da će takav objekat sigurno imati metodu &lt;code&gt;write()&lt;/code&gt; koja je definisana unutar interfejsa &lt;code&gt;Storable&lt;/code&gt;. &lt;/p&gt;
&lt;h3 id="podrazumevane-metode-unutar-interfejsa"&gt;Podrazumevane metode unutar interfejsa&lt;/h3&gt;
&lt;p&gt;Do sada ste imali prilike da vidite interfejse koji su unutar sebe imali apstraktne, javne metode. Javne apstraktne metode dugo su bile jedini sadržaj koji se mogao naći unutar interfejsa. Ipak, u novijim verzijama Jave takva činjenica se promenila, pa su tokom vremena u jezik dodate mogućnosti da interfejsi sadrže i neke druge članove. Za početak, unutar interfejsa se mogu naći podrazumevane metode. &lt;/p&gt;
&lt;p&gt;Podrazumevane metode omogućavaju da se unutar interfejsa definišu konkretne metode, odnosno metode koje poseduju telo. Ali, zbog čega su nam potrebne konkretne metode unutar interfejsa? &lt;/p&gt;
&lt;p&gt;Već ste imali prilike da vidite da se interfejsi mogu implementirati od strane velikog broja različitih klasa. Pri tom, sve klase koje implemetiraju jedan interfejs moraju obezbediti implementaciju svih metoda definisanih unutar tog interfejsa. Sada se postavlja pitanje – šta ukoliko se pojavi potreba za naknadnim dodavanjem još neke metode unutar interfejsa? &lt;/p&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;interface&lt;/span&gt; &lt;span style="color: #fec418"&gt;Storable&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;read&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;();&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;write&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;();&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;update&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;();&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;delete&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;();&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #fec418"&gt;boolean&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;exists&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;();&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Sada je unutar interfejsa &lt;code&gt;Storable&lt;/code&gt; dodata još jedna metoda - &lt;code&gt;exists()&lt;/code&gt;. Reč je o metodi koja je namenjena za utvrđivanje postojanja nekog objekta unutar skladišta podataka. Kada učinimo nešto ovako, odnosno kada dodamo novu metodu unutar interfejsa, sve klase koje su implementirale takav interfejs postaju nevalidne. Drugim rečima, u ovakvoj situaciji metoda &lt;code&gt;exists()&lt;/code&gt; se mora implementirati u svim klasama koje implementiraju interfejs &lt;code&gt;Storable&lt;/code&gt; kako bi kod bio validan. U realnim okolnostima, odnosno unutar realnih Java programa, jedan interfejs može biti implementiran od strane velikog broja klasa. U takvoj situaciji, dodavanje nove metode unutar interfejsa bi podrazumevalo da se svaka od takvih klasa modifikuje, dodavanjem implementacije za metodu koja je dodata. Kako bi se prevazišao takav problem, u Java jezik je uvršćena mogućnost definisanja podrazumevanih (&lt;strong&gt;default&lt;/strong&gt;) metoda unutar interfejsa: &lt;/p&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;interface&lt;/span&gt; &lt;span style="color: #fec418"&gt;Storable&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;read&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;();&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;write&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;();&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;update&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;();&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;delete&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;();&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;default&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;boolean&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;exists&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;return&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;true&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Do malopre apstraktna metoda &lt;code&gt;exists()&lt;/code&gt; sada je pretvorena u podrazumevanu metodu, koja poseduje telo. To sve klase koje implementiraju interfejs &lt;code&gt;Storable&lt;/code&gt; oslobađa potrebe za implementacijom takve metode. Naravno, klase koje implementiraju interfejs &lt;code&gt;Storable&lt;/code&gt; imaju mogućnost da ovakvu podrazumevanu metodu redefinišu, ukoliko se za takvim nečim javi potreba: &lt;/p&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;class&lt;/span&gt; &lt;span style="color: #fec418"&gt;Gamepad&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;extends&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; Product &lt;/span&gt;&lt;span style="color: #815ba4"&gt;implements&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; Storable, Searchable {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	...&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;@Override&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;boolean&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;exists&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #848484"&gt;// Gamepad specific logic for exists() method&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;return&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;false&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Sada u okviru radnog okruženja možete interfejsu &lt;code&gt;Storable&lt;/code&gt; i klasi &lt;code&gt;Gamepad&lt;/code&gt; dodati &lt;strong&gt;default&lt;/strong&gt; metodu &lt;code&gt;exists()&lt;/code&gt;. &lt;/p&gt;
&lt;h3 id="privatne-metode-unutar-interfejsa"&gt;Privatne metode unutar interfejsa&lt;/h3&gt;
&lt;p&gt;S obzirom na to da interfejsi u Javi imaju mogućnost da poseduju konkretne metode, nekada može biti vrlo korisno određenu logiku grupisati unutar metoda koje se mogu koristiti samo unutar interfejsa, a ne i izvan njega. Do takve situacije veoma često može doći kada više podrazumevanih metoda treba da deli određenu istovetnu logiku. Takva istovetna logika se može grupisati unutar privatnih metoda unutar interfejsa: &lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Program.java&lt;/summary&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;span class="filename"&gt;// Program.Java&lt;/span&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;class&lt;/span&gt; &lt;span style="color: #fec418"&gt;Program&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;static&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;main&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(String&lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;[]&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; args) {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		Gamepad product1 &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;new&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; Gamepad(&lt;/span&gt;&lt;span style="color: #48b685"&gt;"Logitech"&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;, &lt;/span&gt;&lt;span style="color: #48b685"&gt;"F710"&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;, &lt;/span&gt;&lt;span style="color: #f99b15"&gt;129.99&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;, &lt;/span&gt;&lt;span style="color: #815ba4"&gt;true&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;);&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		System.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;out&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;println&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(product1.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;exists&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;());&lt;/span&gt;

&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Product.java&lt;/summary&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;span class="filename"&gt;// Product.java&lt;/span&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;abstract&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;class&lt;/span&gt; &lt;span style="color: #fec418"&gt;Product&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;private&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; String brand;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;private&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; String model;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;private&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;double&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; price;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #848484"&gt;// ...&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;Product&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(String brand, String model, &lt;/span&gt;&lt;span style="color: #fec418"&gt;double&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; price) {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;brand&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; brand;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;model&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; model;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;price&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; price;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;@Override&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; String &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;toString&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;return&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #48b685"&gt;"Brand='"&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; brand &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; '\'' &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #48b685"&gt;", Model='"&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; model &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; '\'' &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #48b685"&gt;", Price="&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; price;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Gamepad.java&lt;/summary&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;span class="filename"&gt;// Gamepad.java&lt;/span&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;class&lt;/span&gt; &lt;span style="color: #fec418"&gt;Gamepad&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;extends&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; Product &lt;/span&gt;&lt;span style="color: #815ba4"&gt;implements&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; Storable, Searchable {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #fec418"&gt;boolean&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; wireless;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;Gamepad&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(String brand, String model, &lt;/span&gt;&lt;span style="color: #fec418"&gt;double&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; price, &lt;/span&gt;&lt;span style="color: #fec418"&gt;boolean&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; wireless) {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;super&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(brand, model, price);&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;wireless&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; wireless;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;@Override&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; String &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;toString&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;return&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;super&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;toString&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #48b685"&gt;", "&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #48b685"&gt;"wireless="&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; wireless;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;@Override&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;boolean&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;exists&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #848484"&gt;// Gamepad specific logic for exists() method&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;return&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;false&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;@Override&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;search&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #848484"&gt;// logic for searching&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;@Override&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;read&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #848484"&gt;// logic for reading&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;@Override&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;write&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #848484"&gt;// logic for writing&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;@Override&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;update&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #848484"&gt;// logic for updating&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;@Override&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;delete&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #848484"&gt;// logic for deleting&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Storable.java&lt;/summary&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;span class="filename"&gt;// Storable.java&lt;/span&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;interface&lt;/span&gt; &lt;span style="color: #fec418"&gt;Storable&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;read&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;();&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;write&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;();&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;update&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;();&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;delete&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;();&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;default&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;boolean&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;exists&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		method1();&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		method2();&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;return&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;true&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;private&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;method1&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		System.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;out&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;println&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(&lt;/span&gt;&lt;span style="color: #48b685"&gt;"Hello from private method1"&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;);&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;private&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;method2&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		System.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;out&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;println&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(&lt;/span&gt;&lt;span style="color: #48b685"&gt;"Hello from private method2"&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;);&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Searchable.java&lt;/summary&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;span class="filename"&gt;// Searchable.java&lt;/span&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;interface&lt;/span&gt; &lt;span style="color: #fec418"&gt;Searchable&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;search&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;();&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;Unutar interfejsa &lt;code&gt;Storable&lt;/code&gt; sada su dodate dve privatne metode - &lt;code&gt;method1()&lt;/code&gt; i &lt;code&gt;method2()&lt;/code&gt;, koje se koriste od strane podrazumevane metode. Bitno je razumeti nekoliko važnih činjenica o privatnim metodama unutar interfejsa: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;privatne metode unutar interfejsa namenjene su lokalnoj upotrebi, odnosno, one se mogu koristiti samo unutar interfejsa u kome su definisane &lt;/li&gt;
&lt;li&gt;privatne metode unutar interfejsa ne mogu biti apstraktne, te moraju posedovati telo sa logikom &lt;/li&gt;
&lt;li&gt;privatne metode unutar interfejsa nisu namenjene za spoljašnju upotrebu, tako da se ne implementiraju niti ih je moguće redefinisati u konkretnim klasama &lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="konstante-unutar-interfejsa"&gt;Konstante unutar interfejsa&lt;/h3&gt;
&lt;p&gt;Na kraju, još jedan element koji može postojati unutar Java interfejsa jesu i &lt;strong&gt;konstante&lt;/strong&gt;. Tako je, pored metoda, unutar interfejsa moguće definisati i javna, statička, finalna polja, koja moraju posedovati vrednost: &lt;/p&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;interface&lt;/span&gt; &lt;span style="color: #fec418"&gt;Storable&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;static&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;final&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;int&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; SOME_CONSTANT &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #f99b15"&gt;13&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	...&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Zapravo, svako polje koje se definiše unutar interfejsa mora biti javno, statičko i finalno, te je stoga upravo prikazani kod ekvivalentan ovom: &lt;/p&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;interface&lt;/span&gt; &lt;span style="color: #fec418"&gt;Storable&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #fec418"&gt;int&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; SOME_CONSTANT &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #f99b15"&gt;13&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	...&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Razlog zbog koga su sva polja unutar interfejsa podrazumevano statička vrlo je jednostavan. Interfejsi se ne mogu instancirati, pa se tako polja koja se unutar njih definišu dele između svih klasa koje takav interfejs implementiraju. &lt;/p&gt;
&lt;p&gt;Konstante unutar interfejsa je moguće definisati ukoliko znamo da će za njihovim korišćenjem postojati potreba kod svih klasa koje će interfejs implementirati. U takvoj situaciji, umesto definisanja konstante u svakoj konkretnoj klasi pojedinačno, sve one će imati pristup zajedničkoj konstanti koja postoji unutar interfejsa. Ipak, potrebno je voditi računa da konstanta zaista bude čvrsto vezana za samu namenu interfejsa. U programerskim krugovima dugo se vodi debata o opravdanosti korišćenja konstanti unutar interfejsa, s obzirom na to da se konstante smatraju detaljem koji se bavi implementacijom, dok su interfejsi primarno namenjeni za postizanje apstrakcije. &lt;/p&gt;
&lt;p&gt;Imenovanje interfejsa &lt;br/&gt;
Veoma česta praksa jeste imenovanje interfejsa korišćenjem engleskih prideva koji poseduju sufiks &lt;strong&gt;-able&lt;/strong&gt; ili &lt;strong&gt;-ible&lt;/strong&gt;. Reč je o pridevima koji nastaju od glagola: &lt;code&gt;Comparable&lt;/code&gt;, &lt;code&gt;Iterable&lt;/code&gt;, &lt;code&gt;Storable&lt;/code&gt;, &lt;code&gt;Queryable&lt;/code&gt;... Ovakvi nazivi koriste se da označe da je neka klasa sposobna za obavljanje određenih operacija, sadržanih u nazivu interfejsa. Na primer, &lt;code&gt;Comparable&lt;/code&gt; je naziv koji oslikava da se objekti klasa koje implementiraju takav interfejs mogu porediti. &lt;br/&gt;
Formiranje naziva interfejsa koji se završavaju sufiksima &lt;strong&gt;-able&lt;/strong&gt; i &lt;strong&gt;-ible&lt;/strong&gt; nije pravilo, već samo česta praksa. Stoga je interfejse moguće imenovati proizvoljnim nazivom, sve dok se pridržavamo pravila za formiranje identifikatora u Java jeziku. &lt;/p&gt;
&lt;h2 id="vezbe"&gt;Vežbe&lt;/h2&gt;
&lt;h3 id="vezba-1"&gt;Vežba 1&lt;/h3&gt;
&lt;p&gt;Potrebno je napraviti aplikaciju za restoran brze hrane. Aplikacija će rukovati proizvodima restorana. Restoran brze hrane u ponudi poseduje pice i sendviče. Neophodno je napraviti odgovarajuće klase za modelovanje pica i sendviča i za njihovo predstavljanje u Java programu. Prilikom realizacije je potrebno upotrebiti apstraktne klase i apstraktne metode. &lt;br/&gt;
Sendviči i pice treba da budu određeni sledećim svojstvima: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;naziv, String podatak &lt;/li&gt;
&lt;li&gt;cena, double podatak &lt;/li&gt;
&lt;li&gt;maksimalno 10 začina (priloga), niz String vrednosti &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Nad proizvodima (picama i sendvičima) potrebno je omogućiti obavljanje nekoliko operacija, kroz sledeće metode: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;metoda &lt;code&gt;addSpice()&lt;/code&gt; koja unosi začin &lt;/li&gt;
&lt;li&gt;metoda &lt;code&gt;allSpices()&lt;/code&gt; koja vraća sve začine u tekstualnom obliku &lt;/li&gt;
&lt;li&gt;apstraktna metoda &lt;code&gt;countPrice()&lt;/code&gt; koja izračunava cenu na osnovu tipa proizvoda; porez na picu je 10%, dok je porez na sendviče 15% &lt;/li&gt;
&lt;li&gt;metoda &lt;code&gt;toString()&lt;/code&gt; koja prikazuje podatke o proizvodu u sledećoj formi: &lt;br/&gt;
    Product: pizza, price: 25.45, spices: tomato, mustard, mayonnaise &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Potrebno je napraviti klase &lt;code&gt;Product&lt;/code&gt;, &lt;code&gt;Pizza&lt;/code&gt; i &lt;code&gt;Sandwich&lt;/code&gt;. Klase &lt;code&gt;Pizza&lt;/code&gt; i &lt;code&gt;Sandwich&lt;/code&gt; naslediće apstraktnu klasu &lt;code&gt;Product&lt;/code&gt;. Na kraju je potrebno kreirati po jednu instancu klasa &lt;code&gt;Pizza&lt;/code&gt; i &lt;code&gt;Sandwich&lt;/code&gt; u &lt;code&gt;main()&lt;/code&gt; metodi. &lt;/p&gt;
&lt;h4 id="resenje"&gt;Rešenje&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;Product.java&lt;/summary&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;span class="filename"&gt;// Product.java&lt;/span&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;abstract&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;class&lt;/span&gt; &lt;span style="color: #fec418"&gt;Product&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;int&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; type;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; String name;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;double&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; price;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; String&lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;[]&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; spices;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;abstract&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;double&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;countPrice&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;();&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;Product&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(String name, &lt;/span&gt;&lt;span style="color: #fec418"&gt;double&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; price) {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;spices&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;new&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; String&lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;[&lt;/span&gt;&lt;span style="color: #f99b15"&gt;10&lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;]&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;name&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; name;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;price&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; price;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;@Override&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; String &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;toString&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		StringBuilder output &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;new&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; StringBuilder();&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		output.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;append&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(&lt;/span&gt;&lt;span style="color: #48b685"&gt;"Product: "&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;);&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		output.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;append&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(&lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;name&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;).&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;append&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(&lt;/span&gt;&lt;span style="color: #48b685"&gt;", "&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;);&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		output.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;append&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(&lt;/span&gt;&lt;span style="color: #48b685"&gt;"price: "&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;).&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;append&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(countPrice()).&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;append&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(&lt;/span&gt;&lt;span style="color: #48b685"&gt;", "&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;);&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		output.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;append&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(&lt;/span&gt;&lt;span style="color: #48b685"&gt;"spices: "&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;).&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;append&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(allSpices());&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;return&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; output.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;toString&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;();&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; String &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;allSpices&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		StringBuilder output &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;new&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; StringBuilder();&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;for&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; (String addition : &lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;spices&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;)&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;			&lt;/span&gt;&lt;span style="color: #815ba4"&gt;if&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; (addition &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;!=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;null&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;) {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;				output.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;append&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(addition).&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;append&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(&lt;/span&gt;&lt;span style="color: #48b685"&gt;", "&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;);&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;			}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;if&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; (&lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;!&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;output.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;toString&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;().&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;equals&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(&lt;/span&gt;&lt;span style="color: #48b685"&gt;""&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;)) {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;			&lt;/span&gt;&lt;span style="color: #815ba4"&gt;if&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; (output.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;toString&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;().&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;trim&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;().&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;endsWith&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(&lt;/span&gt;&lt;span style="color: #48b685"&gt;","&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;)) {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;				output.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;replace&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(output.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;length&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;-&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #f99b15"&gt;2&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;, output.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;length&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(), &lt;/span&gt;&lt;span style="color: #48b685"&gt;""&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;);&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;			}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;			&lt;/span&gt;&lt;span style="color: #815ba4"&gt;else&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;				output.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;append&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(&lt;/span&gt;&lt;span style="color: #48b685"&gt;"no spices"&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;);&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;			}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;return&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; output.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;toString&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;();&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;addSpice&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(String spice) {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;for&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; (&lt;/span&gt;&lt;span style="color: #fec418"&gt;int&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; i &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #f99b15"&gt;0&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;; i &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;spices&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;length&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;; i&lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;++&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;)&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;			&lt;/span&gt;&lt;span style="color: #815ba4"&gt;if&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; (&lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;spices&lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;[&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;i&lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;]&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;==&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;null&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;) {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;				&lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;spices&lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;[&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;i&lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;]&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; spice;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;				&lt;/span&gt;&lt;span style="color: #815ba4"&gt;break&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;			}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Pizza.java:&lt;/summary&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;span class="filename"&gt;// Pizza.java&lt;/span&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;class&lt;/span&gt; &lt;span style="color: #fec418"&gt;Pizza&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;extends&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; Product {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;Pizza&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(String name, &lt;/span&gt;&lt;span style="color: #fec418"&gt;double&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; price) {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;super&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(name, price);&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;@Override&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;double&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;countPrice&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;return&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;price&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;price&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;*&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #f99b15"&gt;0.1&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Sandwich.java&lt;/summary&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;span class="filename"&gt;// Sandwich.java&lt;/span&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;class&lt;/span&gt; &lt;span style="color: #fec418"&gt;Sandwich&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;extends&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; Product {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;Sandwich&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(String name, &lt;/span&gt;&lt;span style="color: #fec418"&gt;double&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; price) {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;super&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(name, price);&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;double&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;countPrice&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;return&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;price&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;price&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;*&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #f99b15"&gt;0.15&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Program.java&lt;/summary&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;span class="filename"&gt;// Program.java&lt;/span&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;class&lt;/span&gt; &lt;span style="color: #fec418"&gt;Program&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;static&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;main&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(String&lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;[]&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; args) {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		Pizza p &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;new&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; Pizza(&lt;/span&gt;&lt;span style="color: #48b685"&gt;"Capricciosa"&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;,&lt;/span&gt;&lt;span style="color: #f99b15"&gt;25&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;);&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		p.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;addSpice&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(&lt;/span&gt;&lt;span style="color: #48b685"&gt;"tomato"&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;);&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		p.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;addSpice&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(&lt;/span&gt;&lt;span style="color: #48b685"&gt;"sour cream"&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;);&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		Sandwich s &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;new&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; Sandwich(&lt;/span&gt;&lt;span style="color: #48b685"&gt;"Sandwich with ham"&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;, &lt;/span&gt;&lt;span style="color: #f99b15"&gt;35&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;);&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		s.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;addSpice&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(&lt;/span&gt;&lt;span style="color: #48b685"&gt;"cucumber"&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;);&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		s.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;addSpice&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(&lt;/span&gt;&lt;span style="color: #48b685"&gt;"onion"&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;);&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		s.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;addSpice&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(&lt;/span&gt;&lt;span style="color: #48b685"&gt;"tomato"&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;);&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		System.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;out&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;println&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(p);&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		System.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;out&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;println&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(s);&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;h3 id="vezba-2"&gt;Vežba 2&lt;/h3&gt;
&lt;p&gt;U narednoj vežbi potrebno je obaviti sledeće: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;napraviti apstraktnu klasu &lt;code&gt;Quad&lt;/code&gt; koja sadrži tri polja (koordinate &lt;code&gt;x&lt;/code&gt; i &lt;code&gt;y&lt;/code&gt; i stranicu &lt;code&gt;a&lt;/code&gt;) i jednu apstraktnu metodu &lt;code&gt;setValues()&lt;/code&gt; za postavljanje svih vrednosti &lt;/li&gt;
&lt;li&gt;napraviti interfejs &lt;code&gt;Geom&lt;/code&gt; koji sadrži potpise metoda za izračunavanje površine i obima &lt;/li&gt;
&lt;li&gt;napraviti klasu &lt;code&gt;Square&lt;/code&gt; koja nasleđuje klasu &lt;code&gt;Quad&lt;/code&gt; i implementira interfejs &lt;code&gt;Geom&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;kreirati jednu instancu klase &lt;code&gt;Square&lt;/code&gt; u glavnom programu &lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="resenje_1"&gt;Rešenje&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;Quad.java&lt;/summary&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;span class="filename"&gt;// Quad.java&lt;/span&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;abstract&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;class&lt;/span&gt; &lt;span style="color: #fec418"&gt;Quad&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;int&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; x, y, a;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;abstract&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;setValues&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(&lt;/span&gt;&lt;span style="color: #fec418"&gt;int&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; x, &lt;/span&gt;&lt;span style="color: #fec418"&gt;int&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; y, &lt;/span&gt;&lt;span style="color: #fec418"&gt;int&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; a);&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Geom.java&lt;/summary&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;span class="filename"&gt;// Geom.java&lt;/span&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;interface&lt;/span&gt; &lt;span style="color: #fec418"&gt;Geom&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #fec418"&gt;int&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;area&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;();&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #fec418"&gt;int&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;perimeter&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;();&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Square.java&lt;/summary&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;span class="filename"&gt;// Square.java&lt;/span&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;class&lt;/span&gt; &lt;span style="color: #fec418"&gt;Square&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;extends&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; Quad &lt;/span&gt;&lt;span style="color: #815ba4"&gt;implements&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; Geom {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;int&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;area&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;return&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; a &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;*&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; a;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;@Override&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;int&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;perimeter&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;return&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #f99b15"&gt;4&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;*&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;a&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;@Override&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;setValues&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(&lt;/span&gt;&lt;span style="color: #fec418"&gt;int&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; x, &lt;/span&gt;&lt;span style="color: #fec418"&gt;int&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; y, &lt;/span&gt;&lt;span style="color: #fec418"&gt;int&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; a) {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;x&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; x;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;y&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; y;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;a&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; a;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Program.java&lt;/summary&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;span class="filename"&gt;// Program.java&lt;/span&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;class&lt;/span&gt; &lt;span style="color: #fec418"&gt;Program&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;static&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;main&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(String&lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;[]&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; args) {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		Square s &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;new&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; Square();&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		s.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;setValues&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(&lt;/span&gt;&lt;span style="color: #f99b15"&gt;100&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;, &lt;/span&gt;&lt;span style="color: #f99b15"&gt;100&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;, &lt;/span&gt;&lt;span style="color: #f99b15"&gt;5&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;);&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		System.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;out&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;println&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(s.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;area&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;());&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		System.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;out&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;println&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(s.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;perimeter&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;());&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;h3 id="vezba-3"&gt;Vežba 3&lt;/h3&gt;
&lt;p&gt;U ovoj vežbi potrebno je kreirati dva interfejsa za aplikaciju kalkulator: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Operations&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;&lt;code&gt;Operands&lt;/code&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;Operands&lt;/code&gt; treba da sadrži potpis metode &lt;code&gt;setOperands()&lt;/code&gt; koji postavlja operande na inicijalne vrednosti. Interfejs &lt;code&gt;Operations&lt;/code&gt; treba da sadrži potpise metoda sa operacijama (dovoljne su samo dve). &lt;/p&gt;
&lt;p&gt;Nakon kreiranja interfejsa, potrebno je napraviti klasu &lt;code&gt;Calculator&lt;/code&gt; koja će implementirati interfejse &lt;code&gt;Operations&lt;/code&gt; i &lt;code&gt;Operands&lt;/code&gt;. &lt;br/&gt;
Na kraju je potrebno instancirati klasu &lt;code&gt;Calculator&lt;/code&gt; i pozvati njene metode &lt;code&gt;add()&lt;/code&gt; i &lt;code&gt;sub()&lt;/code&gt; koje vrše sabiranje i oduzimanje dva realna broja. &lt;/p&gt;
&lt;h4 id="resenje_2"&gt;Rešenje&lt;/h4&gt;
&lt;details&gt;
&lt;summary&gt;Operands.java&lt;/summary&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;span class="filename"&gt;// Operants.java&lt;/span&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;interface&lt;/span&gt; &lt;span style="color: #fec418"&gt;Operands&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;setOperands&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(&lt;/span&gt;&lt;span style="color: #fec418"&gt;double&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; a, &lt;/span&gt;&lt;span style="color: #fec418"&gt;double&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; b);&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Operations.java&lt;/summary&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;span class="filename"&gt;// Operations.java&lt;/span&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;interface&lt;/span&gt; &lt;span style="color: #fec418"&gt;Operations&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #fec418"&gt;double&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;add&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;();&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #fec418"&gt;double&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;sub&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;();&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Calculator.java&lt;/summary&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;span class="filename"&gt;// Calculator.java&lt;/span&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;class&lt;/span&gt; &lt;span style="color: #fec418"&gt;Calculator&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;implements&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; Operations, Operands {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;double&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; a, b;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;double&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;add&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;return&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; a &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; b;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;double&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;sub&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;return&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; a &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;-&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; b;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;setOperands&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(&lt;/span&gt;&lt;span style="color: #fec418"&gt;double&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; a, &lt;/span&gt;&lt;span style="color: #fec418"&gt;double&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; b) {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;a&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; a;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;b&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; b;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Program.java&lt;/summary&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;span class="filename"&gt;// Program.java&lt;/span&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;class&lt;/span&gt; &lt;span style="color: #fec418"&gt;Program&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;static&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;main&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(String&lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;[]&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; args) {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		Calculator c &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;new&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; Calculator();&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		c.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;setOperands&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(&lt;/span&gt;&lt;span style="color: #f99b15"&gt;2&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;, &lt;/span&gt;&lt;span style="color: #f99b15"&gt;3&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;);&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		System.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;out&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;println&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(c.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;add&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;());&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		System.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;out&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;println&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(c.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;sub&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;());&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;</content><category term="IT akademija/Advanced Java Programming/AJP - Modul 1. Napredno objektno programiranje"></category><category term="Java"></category><category term="OOP"></category><category term="programiranje"></category><category term="klase"></category><category term="interfejsi"></category><category term="apstrakcija"></category></entry><entry><title>AJP 1.1. Objektno orijentisano programiranje u Javi</title><link href="http://dp-tech.tk/articles/ajp-11-objektno-orijentisano-programiranje-u-javi" rel="alternate"></link><published>2022-01-10T15:33:00+01:00</published><updated>2022-01-10T15:33:00+01:00</updated><author><name>Danijela Popović</name></author><id>tag:dp-tech.tk,2022-01-10:/articles/ajp-11-objektno-orijentisano-programiranje-u-javi</id><summary type="html">&lt;p&gt;Uvod u objektno orijentisano programiranje u Javi i najvažniji pojmovi&lt;/p&gt;</summary><content type="html">
&lt;hr/&gt;
&lt;p&gt;Kurs pred vama biće posvećen naprednim konceptima programiranja korišćenjem programskog jezika Java. Tako ćete imati prilike da proširite svoje znanje upoznavanjem različitih koncepata koji su neophodni za kreiranje kompleksnijih Java programa. Uvodni modul ovog kursa pomoći će vam da proširite razumevanje objektno orijentisanog programiranja u Javi. Za početak, uvodna lekcija ovog modula biće posvećena osnovnim postulatima OOP u Javi, što će vam pomoći da bolje razumete napredne koncepte koji će biti predstavljeni u lekcijama koje slede. Stoga će u ovoj lekciji biti objašnjeno šta su to objekti i klase, koji su njihovi članovi, ali i šta podrazumevaju pojmovi apstrakcije, enkapsulacije, nasleđivanja i polimorfizma, koji predstavljaju osnovne postulate objektno orijentisanog programiranja. &lt;/p&gt;
&lt;h2 id="pojam-objektno-orijentisanog-programiranja"&gt;Pojam objektno orijentisanog programiranja&lt;/h2&gt;
&lt;p&gt;Java je objektno orijentisan programski jezik, što praktično znači da su klase i objekti njegove centralne figure. Objekti su način da se unutar Java programa predstave podaci po uzoru na pojmove iz realnog sveta. U praksi to znači da se objektima mogu vrlo efikasno predstaviti podaci koji su potrebni našim Java programima. Na primer, ukoliko kreiramo program koji rukuje proizvodima koji predstavljaju tehničku robu, svaki takav artikal (proizvod) bio bi jedan objekat (slika 1.1). &lt;/p&gt;
&lt;figure&gt;
&lt;img alt="Slika 1.1. Objekti" src="/images/AdvancedJavaProgramming/1_01_01.png"/&gt;
&lt;figcaption&gt;Slika 1.1. Objekti&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Objekti se kreiraju na osnovu određenog šablona, odnosno modela. U objektno orijentisanom programiranju takvi šabloni se drugačije nazivaju klase (slika 1.2). &lt;/p&gt;
&lt;figure&gt;
&lt;img alt="Slika 1.2. Objekti nastaju na osnovu klasa" src="/images/AdvancedJavaProgramming/1_01_02.png"/&gt;
&lt;figcaption&gt;Slika 1.2. Objekti nastaju na osnovu klasa&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2 id="klase"&gt;Klase&lt;/h2&gt;
&lt;p&gt;Preduslov za kreiranje objekata u Java jeziku jeste postojanje klase. Unutar klase definišu se sve one osobine, odnosno svojstva i ponašanja, koja će objekti koji se na osnovu takve klase kreiraju imati. &lt;/p&gt;
&lt;p&gt;Procesom kreiranja klasa obavlja se modelovanje specifičnih tipova podataka koji su potrebni za funkcionisanje programa koje stvaramo. Tako na primer, ukoliko će naš program rukovati nekim proizvodima, klasa za njihovo modelovanje bi mogla da izgleda ovako: &lt;/p&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;class&lt;/span&gt; &lt;span style="color: #fec418"&gt;Product&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;private&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; String brand;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;private&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; String model;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;private&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;double&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; price;&lt;/span&gt;

&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; String &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;getBrand&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;return&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; brand;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;

&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;setBrand&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(String brand) {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;brand&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; brand;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;

&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; String &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;getModel&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;return&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; model;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;

&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;setModel&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(String model) {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;model&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; model;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;

&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;double&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;getPrice&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;return&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; price;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;

&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;setPrice&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(&lt;/span&gt;&lt;span style="color: #fec418"&gt;double&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; price) {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;price&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; price;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;

&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;Product&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(String brand, String model, &lt;/span&gt;&lt;span style="color: #fec418"&gt;double&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; price) {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;brand&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; brand;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;model&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; model;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;price&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; price;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;

&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;@Override&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; String &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;toString&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;return&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #48b685"&gt;"Brand='"&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; brand &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; '\'' &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #48b685"&gt;", Model='"&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; model &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; '\'' &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #48b685"&gt;", Price="&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; price;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Prikazani kod ilustruje klasu &lt;code&gt;Product&lt;/code&gt;, koja se u Java programu može koristiti za predstavljanje proizvoda. &lt;code&gt;Product&lt;/code&gt; klasa poseduje nekoliko veoma važnih elemenata čiju svrhu je neophodno razumeti. &lt;/p&gt;
&lt;h3 id="privatna-svojstva"&gt;Privatna svojstva&lt;/h3&gt;
&lt;p&gt;Svojstva definišu karakteristike koje će moći da imaju objekti koji se kreiraju korišćenjem klase. U prikazanoj klasi postoje sledeća svojstva: &lt;/p&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #815ba4"&gt;private&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; String brand;&lt;/span&gt;
&lt;span style="color: #815ba4"&gt;private&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; String model;&lt;/span&gt;
&lt;span style="color: #815ba4"&gt;private&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;double&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; price;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ovo praktično znači da će svi objekti koji budu kreirani korišćenjem klase &lt;code&gt;Product&lt;/code&gt; moći da budu karakterisani korišćenjem informacija o brendu, modelu i ceni. &lt;/p&gt;
&lt;p&gt;Upravo prikazana svojstva su privatna, što znači da im je moguće pristupiti samo iz klase u kojoj su definisana. &lt;/p&gt;
&lt;h3 id="metode-get-i-set"&gt;Metode &lt;strong&gt;get&lt;/strong&gt; i &lt;strong&gt;set&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;Za pristup privatnim svojstvima izvan klase &lt;code&gt;Product&lt;/code&gt; koriste se &lt;strong&gt;get&lt;/strong&gt; i &lt;strong&gt;set&lt;/strong&gt; metode. Reč je o javnim metodama koje omogućavaju čitanje i izmenu vrednosti privatnih svojstava: &lt;/p&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; String &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;getBrand&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;return&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; brand;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;

&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;setBrand&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(String brand) {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;brand&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; brand;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;

&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; String &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;getModel&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;return&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; model;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;

&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;setModel&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(String model) {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;model&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; model;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;

&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;double&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;getPrice&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;return&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; price;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;

&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;setPrice&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(&lt;/span&gt;&lt;span style="color: #fec418"&gt;double&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; price) {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;price&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; price;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Za svako svojstvo definisane su po dve metode. Metode sa prefiksom &lt;strong&gt;set&lt;/strong&gt; koriste se za postavljanje vrednosti privatnih svojstava, a metode sa prefiksom &lt;strong&gt;get&lt;/strong&gt; za čitanje njihovih vrednosti. &lt;/p&gt;
&lt;h3 id="konstruktor"&gt;Konstruktor&lt;/h3&gt;
&lt;p&gt;Unutar klase &lt;code&gt;Product&lt;/code&gt; postoji jedan konstruktor, što je zapravo metoda koja se poziva prilikom kreiranja objekata: &lt;/p&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;Product&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(String brand, String model, &lt;/span&gt;&lt;span style="color: #fec418"&gt;double&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; price) {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;brand&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; brand;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;model&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; model;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;price&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; price;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Unutar konstruktora se obavlja inicijalizacija svojstava objekta vrednostima koje su prilikom kreiranja objekta prosleđene konstruktoru. &lt;/p&gt;
&lt;h3 id="metoda-tostring"&gt;Metoda &lt;code&gt;toString()&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Klasa &lt;code&gt;Product&lt;/code&gt; poseduje i metodu &lt;code&gt;toString()&lt;/code&gt;, unutar koje je definisana logika za generisanje tekstualne reprezentacije objekta: &lt;/p&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #5bc4bf"&gt;@Override&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;&lt;/span&gt;
&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; String &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;toString&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;return&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #48b685"&gt;"Brand='"&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; brand &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; '\'' &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #48b685"&gt;", Model='"&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; model &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; '\'' &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #48b685"&gt;", Price="&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; price;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Pozivanjem metode &lt;code&gt;toString()&lt;/code&gt; obavlja se ispis informacija o objektu, što podrazumeva ispis vrednosti njegovih svojstava. &lt;/p&gt;
&lt;h2 id="objekti"&gt;Objekti&lt;/h2&gt;
&lt;p&gt;Na osnovu upravo kreirane klase ćemo prvo obaviti kreiranje nekoliko objekata, a zatim ćemo se detaljnije upoznati sa upravo prikazanim elementima koji čine jednu klasu. Jedan objekat na osnovu klase &lt;code&gt;Product&lt;/code&gt; može se kreirati na sledeći način: &lt;/p&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #c7c7c7"&gt;Product product1 &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;new&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; Product(&lt;/span&gt;&lt;span style="color: #48b685"&gt;"Logitech"&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;, &lt;/span&gt;&lt;span style="color: #48b685"&gt;"F710"&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;, &lt;/span&gt;&lt;span style="color: #f99b15"&gt;129.99&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ovo je primer kreiranja objekta na osnovu klase &lt;code&gt;Product&lt;/code&gt;. Objekat se kreira upotrebom ključne reči &lt;code&gt;new&lt;/code&gt;, nakon koje sledi poziv konstruktora, kome se prosleđuju vrednosti koje će biti dodeljene svojstvima. &lt;/p&gt;
&lt;p&gt;Proces kreiranja objekata se drugačije naziva instanciranje, pa se tako može reći da prikazana naredba oslikava instanciranje klase &lt;code&gt;Product&lt;/code&gt;. Instanciranjem je u našem programu predstavljen prvi od tri proizvoda sa uvodnih slika 1.1. i 1.2. Naravno, na osnovu jedne klase može se stvoriti proizvoljan broj objekata, pa je tako korišćenjem klase &lt;code&gt;Product&lt;/code&gt; u našem programu sada moguće predstaviti sve proizvode sa slika 1.1 i 1.2. &lt;/p&gt;
&lt;p&gt;Nad kreiranim objektima moguće je pozivati metodu &lt;code&gt;toString()&lt;/code&gt;, koja će za rezultat imati generisanje tekstualne reprezentacije objekata: &lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Program.java&lt;/summary&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;span class="filename"&gt;// Program.java&lt;/span&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;class&lt;/span&gt; &lt;span style="color: #fec418"&gt;Main&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;static&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;main&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(String&lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;[]&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; args) {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		Product product1 &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;new&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; Product(&lt;/span&gt;&lt;span style="color: #48b685"&gt;"Logitech"&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;, &lt;/span&gt;&lt;span style="color: #48b685"&gt;"F710"&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;, &lt;/span&gt;&lt;span style="color: #f99b15"&gt;129.99&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;);&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		Product product2 &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;new&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; Product(&lt;/span&gt;&lt;span style="color: #48b685"&gt;"HP"&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;, &lt;/span&gt;&lt;span style="color: #48b685"&gt;"Envy Photo 7155"&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;, &lt;/span&gt;&lt;span style="color: #f99b15"&gt;179.99&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;);&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		Product product3 &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;new&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; Product(&lt;/span&gt;&lt;span style="color: #48b685"&gt;"Dell"&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;, &lt;/span&gt;&lt;span style="color: #48b685"&gt;"U2419H"&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;, &lt;/span&gt;&lt;span style="color: #f99b15"&gt;219.99&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;);&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		System.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;out&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;println&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(product1);&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		System.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;out&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;println&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(product2);&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		System.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;out&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;println&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(product3);&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Product.java&lt;/summary&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;span class="filename"&gt;// Product.java&lt;/span&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;class&lt;/span&gt; &lt;span style="color: #fec418"&gt;Product&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;private&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; String brand;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;private&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; String model;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;private&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;double&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; price;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; String &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;getBrand&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;return&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; brand;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;setBrand&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(String brand) {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;brand&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; brand;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; String &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;getModel&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;return&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; model;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;setModel&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(String model) {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;model&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; model;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;double&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;getPrice&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;return&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; price;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;setPrice&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(&lt;/span&gt;&lt;span style="color: #fec418"&gt;double&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; price) {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;price&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; price;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;Product&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(String brand, String model, &lt;/span&gt;&lt;span style="color: #fec418"&gt;double&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; price) {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;brand&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; brand;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;model&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; model;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;price&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; price;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;@Override&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; String &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;toString&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;return&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #48b685"&gt;"Brand='"&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; brand &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; '\'' &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #48b685"&gt;", Model='"&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; model &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; '\'' &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #48b685"&gt;", Price="&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; price;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;Na ovaj način na izlazu se stvara sledeći ispis: &lt;/p&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Brand='Logitech', Model='F710', Price=129.99
Brand='HP', Model='Envy Photo 7155', Price=179.99
Brand='Dell', Model='U2419H', Price=219.99
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;
&lt;p&gt;Na početku ove lekcije spomenuti su i pojmovi osnovnih postulata objektno orijentisanog programiranja. Reč je o apstrakciji, enkapsulaciji, nasleđivanju i polimorfizmu. O njima će biti reči u nastavku ove lekcije. &lt;/p&gt;
&lt;h2 id="apstrakcija"&gt;Apstrakcija&lt;/h2&gt;
&lt;p&gt;Apstrakcija je princip objektno orijentisanog programiranja koji omogućava da se složeni entiteti iz realnog sveta modeluju baš onako kako mi želimo - sa nivoom detalja koji odgovara potrebama našeg programa. To znači da je u ovoj lekciji već ilustrovan primer apstrakcije i to upravo prilikom kreiranja klase &lt;code&gt;Product&lt;/code&gt;. Njenim kreiranjem obavljeno je modelovanje proizvoda, odnosno tipa podatka koji je našem programu potreban. &lt;/p&gt;
&lt;h2 id="enkapsulacija"&gt;Enkapsulacija&lt;/h2&gt;
&lt;p&gt;Objekat predstavlja zaokruženu celinu, zato što u potpunosti opisuje jedan pojam iz realnog sveta. Unutar objekata objedinjuju se informacije i funkcionalnosti koje se tiču entiteta koji se modeluje. Objedinjavanje takvih informacija i funkcionalnosti drugačije se naziva enkapsulacija. &lt;/p&gt;
&lt;p&gt;I enkapsulacija je princip objektno orijentisanog programiranja koji je već ilustrovan na prikazanom primeru klase &lt;code&gt;Product&lt;/code&gt;. Naime, enkapsulacijom se svojstva i metode &lt;code&gt;Product&lt;/code&gt; objekata prezentuju kao celina, kojom se rukuje korišćenjem naziva promenljive koja čuva referencu na takav objekat. &lt;/p&gt;
&lt;p&gt;Enkapsulacija je ilustrovana i na primeru privatnih objektnih svojstava, kojima se izvan klase pristupa korišćenjem specijalnih metoda koje se koriste za upis i čitanje vrednosti privatnih svojstava. Postojanje &lt;strong&gt;get&lt;/strong&gt; i &lt;strong&gt;set&lt;/strong&gt; metoda omogućava kontrolisanu interakciju sa privatnim poljima, pa one predstavljaju još jedan svojevrstan primer enkapsulacije. &lt;/p&gt;
&lt;h2 id="nasleivanje"&gt;Nasleđivanje&lt;/h2&gt;
&lt;p&gt;Nasleđivanje je još jedan postulat objektno orijentisanog programiranja koji omogućava kreiranje klasa koje svoje osobine i ponašanja nasleđuju od neke druge klase. U upravo prikazanom primeru smo kreirali samo jednu klasu (&lt;code&gt;Product&lt;/code&gt;), tako da samostalno nismo definisali bilo kakvo nasleđivanje. Ipak, to ne znači da u primeru iz ove lekcije ne postoji nasleđivanje. Naime, sve klase u programskom jeziku Java implicitno nasleđuju osnovnu klasu tog jezika - klasu &lt;code&gt;Object&lt;/code&gt;. &lt;/p&gt;
&lt;p&gt;&lt;code&gt;Object&lt;/code&gt; je korena klasa u jeziku Java. To praktično znači da sve druge klase nju indirektno nasleđuju (slika 1.3). &lt;/p&gt;
&lt;figure&gt;
&lt;img alt="Slika 1.3. Object je osnovna klasa Java jezika" src="/images/AdvancedJavaProgramming/1_01_03.png"/&gt;
&lt;figcaption&gt;Slika 1.3. Object je osnovna klasa Java jezika&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Na slici 1.3. možete da vidite hijerarhiju nasleđivanja između klasa u Java jeziku. Na vrhu takve hijerarhije nalazi se klasa &lt;code&gt;Object&lt;/code&gt;. Sve klase u Javi mogu biti nasleđene. Nasleđena klasa postaje roditeljska klasa za sve klase koje je nasleđuju. Takođe, sve klase u Javi imaju svoju roditeljsku klasu, osim klase &lt;code&gt;Object&lt;/code&gt; koja se nalazi na vrhu klasne hijerarhije. &lt;/p&gt;
&lt;p&gt;S obzirom na to da sve klase nasleđuju klasu &lt;code&gt;Object&lt;/code&gt;, to znači i da naša klasa &lt;code&gt;Product&lt;/code&gt; iz ove lekcije to čini. Ipak, primer modelovanja proizvoda u jednom Java programu idealan je za uvođenje nekoliko dodatnih konkretnijih klasa, koje bi nasledile već kreiranu klasu &lt;code&gt;Product&lt;/code&gt;. Naime, različite grupe proizvoda se mogu predstaviti sopstvenim klasama, pa tako u primer možemo da uvedemo i nekoliko dodatnih klasa: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Gamepad&lt;/code&gt;, za predstavljanje kontrolera za video-igre &lt;/li&gt;
&lt;li&gt;&lt;code&gt;Monitor&lt;/code&gt;, za predstavljanje kompjuterskih monitora &lt;/li&gt;
&lt;li&gt;&lt;code&gt;Printer&lt;/code&gt;, za predstavljanje štampača &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Svaka od upravo navedenih klasa predstavlja specifičnu vrstu proizvoda, koji poseduju osobine koje ih razlikuju od drugih vrsta proizvoda. To znači da će u Java programu svaka od ovih klasa imati neka specifična svojstva. &lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Program.java&lt;/summary&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;span class="filename"&gt;// Program.java&lt;/span&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;class&lt;/span&gt; &lt;span style="color: #fec418"&gt;Main&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;static&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;void&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;main&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(String&lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;[]&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; args) {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		Gamepad product1 &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;new&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; Gamepad(&lt;/span&gt;&lt;span style="color: #48b685"&gt;"Logitech"&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;, &lt;/span&gt;&lt;span style="color: #48b685"&gt;"F710"&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;, &lt;/span&gt;&lt;span style="color: #f99b15"&gt;129.99&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;, &lt;/span&gt;&lt;span style="color: #815ba4"&gt;true&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;);&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		Printer product2 &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;new&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; Printer(&lt;/span&gt;&lt;span style="color: #48b685"&gt;"HP"&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;, &lt;/span&gt;&lt;span style="color: #48b685"&gt;"Envy Photo 7155"&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;, &lt;/span&gt;&lt;span style="color: #f99b15"&gt;179.99&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;, &lt;/span&gt;&lt;span style="color: #815ba4"&gt;true&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;);&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		Monitor product3 &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;new&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; Monitor(&lt;/span&gt;&lt;span style="color: #48b685"&gt;"Dell"&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;, &lt;/span&gt;&lt;span style="color: #48b685"&gt;"U2419H"&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;, &lt;/span&gt;&lt;span style="color: #f99b15"&gt;219.99&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;, &lt;/span&gt;&lt;span style="color: #f99b15"&gt;24&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;);&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		System.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;out&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;println&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(product1);&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		System.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;out&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;println&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(product2);&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		System.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;out&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;println&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(product3);&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Product.java&lt;/summary&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;span class="filename"&gt;// Product.java&lt;/span&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;class&lt;/span&gt; &lt;span style="color: #fec418"&gt;Product&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;private&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; String brand;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;private&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; String model;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;private&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;double&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; price;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #848484"&gt;// ...&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;Product&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(String brand, String model, &lt;/span&gt;&lt;span style="color: #fec418"&gt;double&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; price) {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;brand&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; brand;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;model&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; model;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;price&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; price;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;@Override&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; String &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;toString&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;return&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #48b685"&gt;"Brand='"&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; brand &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; '\'' &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #48b685"&gt;", Model='"&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; model &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; '\'' &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #48b685"&gt;", Price="&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; price;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Gamepad.java&lt;/summary&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;span class="filename"&gt;// Gamepad.java&lt;/span&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;class&lt;/span&gt; &lt;span style="color: #fec418"&gt;Gamepad&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;extends&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; Product {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #fec418"&gt;boolean&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; wireless;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;Gamepad&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(String brand, String model, &lt;/span&gt;&lt;span style="color: #fec418"&gt;double&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; price, &lt;/span&gt;&lt;span style="color: #fec418"&gt;boolean&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; wireless) {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;super&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(brand, model, price);&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;wireless&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; wireless;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;@Override&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; String &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;toString&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;return&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;super&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;toString&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #48b685"&gt;", "&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #48b685"&gt;"wireless="&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; wireless;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Monitor.java&lt;/summary&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;span class="filename"&gt;// Monitor.java&lt;/span&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;class&lt;/span&gt; &lt;span style="color: #fec418"&gt;Monitor&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;extends&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; Product {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #fec418"&gt;double&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; diagonal;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;Monitor&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(String brand, String model, &lt;/span&gt;&lt;span style="color: #fec418"&gt;double&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; price, &lt;/span&gt;&lt;span style="color: #fec418"&gt;double&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; diagonal) {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;super&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(brand, model, price);&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;diagonal&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; diagonal;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;@Override&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; String &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;toString&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;return&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;super&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;toString&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #48b685"&gt;", "&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #48b685"&gt;"diagonal="&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; diagonal;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Printer.java&lt;/summary&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;span class="filename"&gt;// Printer.java&lt;/span&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;class&lt;/span&gt; &lt;span style="color: #fec418"&gt;Printer&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;extends&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; Product {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #fec418"&gt;boolean&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; color;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;Printer&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(String brand, String model, &lt;/span&gt;&lt;span style="color: #fec418"&gt;double&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; price, &lt;/span&gt;&lt;span style="color: #fec418"&gt;boolean&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; color) {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;super&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(brand, model, price);&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;color&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; color;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;@Override&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; String &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;toString&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;		&lt;/span&gt;&lt;span style="color: #815ba4"&gt;return&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #815ba4"&gt;super&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;toString&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #48b685"&gt;", "&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #48b685"&gt;"color="&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; color;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	}&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;U sve tri klase koje nasleđuju klasu &lt;code&gt;Product&lt;/code&gt; postoji identična logika. Svaka od klasa definiše po jednu dodatnu osobinu specifične grupe proizvoda. Klasa &lt;code&gt;Gamepad&lt;/code&gt; poseduje svojstvo &lt;code&gt;wireless&lt;/code&gt;, kojim je moguće definisati da li je reč o bežičnom kontroleru ili ne. Klasa &lt;code&gt;Monitor&lt;/code&gt; poseduje svojstvo &lt;code&gt;diagonal&lt;/code&gt;, kojim je moguće definisati veličinu dijagonale displeja u inčima. Na kraju, klasa &lt;code&gt;Printer&lt;/code&gt; poseduje svojstvo &lt;code&gt;color&lt;/code&gt;, koje se može koristiti kako bi se naznačilo da li štampač ima mogućnost štampe u boji. &lt;/p&gt;
&lt;p&gt;Sve tri klase poseduju po jedan konstruktor. Unutar njih, prvo se obavlja pozivanje roditeljskog konstruktora, korišćenjem posebne ključne reči &lt;code&gt;super&lt;/code&gt;. Kada se ključna reč &lt;code&gt;super&lt;/code&gt; upotrebi u obliku metode, njom se postiže pozivanje konstruktora roditeljske klase. Tako se konstruktor roditeljske klase upošljava kako bi obavio inicijalizaciju svojstava koja su definisana unutar klase &lt;code&gt;Product&lt;/code&gt;, dok se unutar konkretnih klasa obavlja inicijalizacija samo onih svojstava koja su karakteristična za konkretne klase. &lt;/p&gt;
&lt;p&gt;Na kraju, svaka od upravo prikazanih konkretnih klasa koje predstavljaju proizvode poseduje i sopstvenu varijantu metode &lt;code&gt;toString()&lt;/code&gt;. O tome će više reči biti u narednom poglavlju o polimorfizmu. &lt;/p&gt;
&lt;h3 id="klasni-clanovi-koji-se-nasleuju"&gt;Klasni članovi koji se nasleđuju&lt;/h3&gt;
&lt;p&gt;Nasleđivanjem, klasa dobija sve metode i svojstva roditeljske klase koji nisu obeleženi kao privatni. Privatna svojstva i metode se ne nasleđuju, ali se njima može pristupiti indirektno, ukoliko ih roditeljska klasa izlaže korišćenjem nekih metoda koje nisu privatne. Primer takvih metoda su upravo &lt;strong&gt;get&lt;/strong&gt; i &lt;strong&gt;set&lt;/strong&gt; metode koje postoje unutar &lt;code&gt;Product&lt;/code&gt; klase. &lt;/p&gt;
&lt;h3 id="nasleivanje-i-konstruktori"&gt;Nasleđivanje i konstruktori&lt;/h3&gt;
&lt;p&gt;Konstruktori su još jedan klasni element koji se ne nasleđuje. Ipak, kada se govori o konstruktorima i nasleđivanju, bitno je znati još jednu vrlo važnu osobinu jezika. Naime, već je poznato da se prilikom kreiranja objekata, odnosno instanciranja neke klase, obavlja pozivanje odgovarajućeg konstruktora. Java garantuje da će se prilikom kreiranja objekata pozvati konstruktor, pa čak i kada on unutar klase nije eksplicitno kreiran. U takvim situacijama u klasi postoji podrazumevani konstruktor koji nema parametara. &lt;/p&gt;
&lt;p&gt;Pored garancije da će konstruktor biti pozvan, Java garantuje da će prilikom instanciranja neke klase biti pozvan i konstruktor koji se nalazi unutar njene roditeljske klase. Takvu garanciju Java postiže tako što na početak svakog konstruktora postavlja naredbu za poziv konstruktora iz roditeljske klase. Na primer, kada unutar &lt;code&gt;Product&lt;/code&gt; klase ne bi postojao konstruktor koji smo samostalno kreirali, Java bi za nas obavila kreiranje konstruktora sledećeg oblika: &lt;/p&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;Product&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;super&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;();&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ovako bi izgledao podrazumevani konstruktor klase &lt;code&gt;Product&lt;/code&gt; koji bi kompajler samostalno kreirao u slučaju da ga nismo eksplicitno definisali. Bitno je da primetite da se na početku takvog konstruktora nalazi naredba u kojoj se poziva konstruktor roditeljske klase. &lt;br/&gt;
S obzirom na to da Java garantuje da će se konstruktor roditeljske klase uvek pozvati, kompajler dodaje naredbu za poziv roditeljskog konstruktora i na početak konstruktora koje samostalno kreiramo, ukoliko tako nešto mi ne učinimo. Kako biste ovo bolje razumeli, pogledajte sledeći konstruktor: &lt;/p&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;Gamepad&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	System.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;out&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;println&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(&lt;/span&gt;&lt;span style="color: #48b685"&gt;"Hello from Gamepad constructor."&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;);&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ovako može izgledati konstruktor unutar klase &lt;code&gt;Gamepad&lt;/code&gt;, koja nasleđuje klasu &lt;code&gt;Product&lt;/code&gt;. Ipak, s obzirom na to da uvek garantuje pozivanje roditeljskog konstruktora, Java kompajler će ovakav konstruktor modifikovati na sledeći način: &lt;/p&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;Gamepad&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;super&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;();&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	System.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;out&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;println&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(&lt;/span&gt;&lt;span style="color: #48b685"&gt;"Hello from Gamepad constructor."&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;);&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Naredba &lt;code&gt;super()&lt;/code&gt; je ono što Java kompajler dodaje za nas kako bi osigurao pozivanje roditeljskog konstruktora. Bitno je da razumete da Java kompajler uvek dodaje naredbu za poziv konstruktora bez parametara. Stoga, ukoliko se roditeljski konstruktor poziva eksplicitno, neophodno je da unutar roditeljske klase postoji konstruktor bez parametara, bilo da je reč o podrazumevanom ili o onom koji vi samostalno kreirate. Pošto mi unutar klase &lt;code&gt;Product&lt;/code&gt; nemamo konstruktor bez parametara, u nasleđenim klasama se ne možemo osloniti na automatsko dodavanje naredbe &lt;code&gt;super()&lt;/code&gt; od strane kompajlera (slika 1.4). &lt;/p&gt;
&lt;figure&gt;
&lt;img alt="Slika 1.4. Problem koji može nastati kada roditeljska klasa ne poseduje podrazumevani konstruktor" src="/images/AdvancedJavaProgramming/1_01_04.png"/&gt;
&lt;figcaption&gt;Slika 1.4. Problem koji može nastati kada roditeljska klasa ne poseduje podrazumevani konstruktor&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Ovakav problem se može rešiti na dva načina. Prvi podrazumeva kreiranje konstruktora bez parametara unutar roditeljske &lt;code&gt;Product&lt;/code&gt; klase. Drugi način za rešavanje ovakve situacije jeste samostalno pozivanje konstruktora roditeljske klase, pri čemu bismo, naravno, pozvali onaj konstruktor koji unutar roditeljske klase postoji. &lt;/p&gt;
&lt;p&gt;Naredba &lt;code&gt;super()&lt;/code&gt; za poziv roditeljskog konstruktora mora biti prva naredba unutar tela konstruktorske metode. &lt;/p&gt;
&lt;h2 id="polimorfizam"&gt;Polimorfizam&lt;/h2&gt;
&lt;p&gt;Prilikom realizovanja nasleđivanja u objektno orijentisanom programiranju, veoma često dolazi do potrebe za redefinisanjem nekih nasleđenih ponašanja. Tako roditeljski objekat može definisati neku funkcionalnost koja ne zadovoljava u potpunosti njegove naslednike. Tako naslednici imaju mogućnost da nasleđeno ponašanje prilagode, dopune ili u potpunosti izmene. Na taj način se stvaraju različite verzije jednog istog ponašanja, odnosno verzije koje odgovaraju svakom pojedinačnom tipu objekata. Takva osobina objektno orijentisanog programiranja drugačije se naziva polimorfizam, odnosno višestruko značenje jednog istog pojma. &lt;/p&gt;
&lt;p&gt;Upravo opisana situacija postoji i unutar prikazanog primera. Naime, svaka od klasa poseduje metodu &lt;code&gt;toString()&lt;/code&gt;, pri čemu je logika takve metode unutar svake od klasa različita. Metoda &lt;code&gt;toString()&lt;/code&gt; potiče iz korene klase Java jezika - klase &lt;code&gt;Object&lt;/code&gt;. To je jedna od nekoliko metoda koje postoje unutar ove klase i koje stoga nasleđuju sve ostale Java klase, kako one koje su ugrađene tako i one koje samostalno kreiramo. Upravo zbog toga i sve naše klase poseduju takvu metodu, bez ikakve potrebe da njenu logiku samostalno definišu. Ipak, izvorna logika &lt;code&gt;toString()&lt;/code&gt; metode ne odgovara u potpunosti klasama koje smo mi samostalno kreirali. Kako biste ovo bolje razumeli, evo kako metoda &lt;code&gt;toString()&lt;/code&gt; izgleda u svom izvornom obliku, unutar klase &lt;code&gt;Object&lt;/code&gt;: &lt;/p&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; String &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;toString&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;return&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; getClass().&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;getName&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #48b685"&gt;"@"&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; Integer.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;toHexString&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(hashCode());&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Izvorna logika &lt;code&gt;toString()&lt;/code&gt; metode je takva da se unutar nje formira tekst koji se sastoji iz naziva klase kome sledi jedinstveni kod koji objekti dobijaju od strane virtualne mašine prilikom njihovog kreiranja. Reč je o kodu koji se dobija korišćenjem još jedne metode koja postoji unutar Object klase - metode &lt;code&gt;hashCode()&lt;/code&gt;. Izvorna logika metode &lt;code&gt;toString()&lt;/code&gt;, kao što možete da pretpostavite, daje prilično uopštenu tekstualnu reprezentaciju objekata. Na primeru klase &lt;code&gt;Product&lt;/code&gt;, tekstualna reprezentacija jednog objekta dobijena od ovakve izvorne logike bi izgledala ovako: &lt;/p&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Product@378bf509
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Pored naziva klase, ovakav tekst za krajnjeg korisnika ne poseduje bilo kakve značajne informacije. Upravo zbog toga se u svakoj klasi koju smo samostalno kreirali u ovoj lekciji pribegava redefinisanju metode &lt;code&gt;toString()&lt;/code&gt;. Tako sve klase poseduju sopstvenu logiku ove metode, koja odgovara skupu svojstava koja se unutar njih nalaze. Ovo je svojevrstan primer polimorfizma, odnosno višestrukog značenja jednog istog pojma. &lt;/p&gt;
&lt;p&gt;Proces redefinisanja propraćen je i upotrebom jedne posebne oznake (anotacije) koja se postavlja pre potpisa metode koja se redefiniše. Kako bi se naznačilo da je reč o redefinisanoj metodi, odnosno kako bi se naglasilo da metoda sa istim nazivom postoji i unutar roditeljske klase, pre potpisa metode postavlja se anotacija &lt;code&gt;@Override&lt;/code&gt;. Bitno je znati da postavljanje anotacije &lt;code&gt;@Override&lt;/code&gt; nije obavezno, odnosno da neće stvoriti grešku prilikom kompajliranja ili izvršavanja. Ipak, njeno korišćenje jeste dobra praksa, zato što poboljšava preglednost, jasno signalizirajući da je određena metoda redefinisana. Redefinisanje metoda se drugačije naziva &lt;strong&gt;overriding&lt;/strong&gt;. &lt;/p&gt;
&lt;p&gt;Još jedan primer polimorfizma u Java programskom jeziku jeste mogućnost postojanja više metoda sa identičnim nazivima unutar jedne klase. Takvu situaciju je najbolje videti na primeru konstruktora. Naime, unutar jedne Java klase može postojati nekoliko konstruktora. Naravno, svi oni imaju identičan naziv koji odgovara nazivu klase, ali je neophodno da poseduju različite ulazne parametre: &lt;/p&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;Product&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;() {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;

&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;Product&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(String brand, String model, &lt;/span&gt;&lt;span style="color: #fec418"&gt;double&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; price) {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;brand&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; brand;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;model&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; model;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;this&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;.&lt;/span&gt;&lt;span style="color: #06b6ef"&gt;price&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;=&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; price;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Kod prikazuje dva konstruktora unutar klase &lt;code&gt;Product&lt;/code&gt;. Naravno, i regularne metode se mogu upotrebiti u ovom obliku, sve dok poseduju različite ulazne parametre: &lt;/p&gt;
&lt;div class="highlight" style="background: #000000"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;int&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;sum&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(&lt;/span&gt;&lt;span style="color: #fec418"&gt;int&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; a, &lt;/span&gt;&lt;span style="color: #fec418"&gt;int&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; b) {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;return&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; a &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; b;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;
&lt;span style="color: #815ba4"&gt;public&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #fec418"&gt;int&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; &lt;/span&gt;&lt;span style="color: #06b6ef"&gt;sum&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt;(&lt;/span&gt;&lt;span style="color: #fec418"&gt;int&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; a, &lt;/span&gt;&lt;span style="color: #fec418"&gt;int&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; b, &lt;/span&gt;&lt;span style="color: #fec418"&gt;int&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; c) {&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;	&lt;/span&gt;&lt;span style="color: #815ba4"&gt;return&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; a &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; b &lt;/span&gt;&lt;span style="color: #5bc4bf"&gt;+&lt;/span&gt;&lt;span style="color: #c7c7c7"&gt; c;&lt;/span&gt;
&lt;span style="color: #c7c7c7"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ovo su sada dve metode za sabiranje, koje poseduju identične nazive - &lt;code&gt;sum()&lt;/code&gt;. Ipak, prva prihvata dva parametra, a druga tri, pa je njihovo postojanje unutar iste klase potpuno legitimno. Ovakva situacija se u Javi naziva &lt;strong&gt;overloading&lt;/strong&gt;, odnosno preklapanje metoda i još jedan je od svojevrsnih primera polimorfizma.&lt;/p&gt;</content><category term="IT akademija/Advanced Java Programming/AJP - Modul 1. Napredno objektno programiranje"></category><category term="Java"></category><category term="OOP"></category><category term="programiranje"></category><category term="objekti"></category><category term="klase"></category><category term="apstrakcija"></category><category term="enkapsulacija"></category><category term="nasleđivanje"></category><category term="polimorfizam"></category></entry></feed>